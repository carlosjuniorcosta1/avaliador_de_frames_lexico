# -*- coding: utf-8 -*-
"""
Created on Sat Mar 26 00:39:10 2022

@author: Usuario
"""

import pandas as pd
import re
!pip install spacy
!python3 -m spacy download pt
!pip install --upgrade plotly
import spacy
nlp = spacy.load('pt_core_news_sm')
import plotly.graph_objects as go
import plotly.express as px
import numpy as np
import os       


file1 = pd.read_csv(str(input('Filename (C-ORAL-ESQ/BRASIL, csv): ')))
file2 = pd.read_csv('frame_net_dados.csv')
file_plot = ' '.join([x[:-4] for x in os.listdir() if not x.startswith('frame_net_dados') and x.endswith('csv')])

def coral_framenet():
  df = file1.copy()
  df_frame = file1.merge(file2, how = 'left')
  df_frame = df_frame.fillna(' ')
  df_frame['normalized_utterances'] = df_frame['normalized_utterances'].str.lower()
  df_frame['lema'] = df_frame['normalized_utterances'].apply(lambda x: ' '.join([token.lemma_ for token in nlp(x)]))   

      #cria 698 colunas de frames e conta os lexemas dos enunciados 
  df_frame["Abundância_distribuída"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcobrir\b|\brevestir\b", str(x))))

  df_frame["Abundância_distribuída"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcobrir\b|\brevestir\b", str(x))))
  df_frame["Abandono"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babandonado\b|\babandonar\b|\babandono\b|\bdeixar\b|\besquecer\b|\besquecido\b|\bnegligenciar\b", str(x))))
  df_frame["Abertura"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baberto\b|\bfechado\b", str(x))))
  df_frame["Absorção_de_calor"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bassar\b|\bbranquear\b|\bcozinhar\b|\bdourar\b|\bferventar\b|\bferver\b|\bfritar\b|\bgrelhar\b|\brefogar\b", str(x))))
  df_frame["Abundância"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babundante\b|\babundar\b|\brico\b", str(x))))
  df_frame["Abundância_distribuída"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcobrir\b|\brevestir\b", str(x))))
  df_frame["Abundar_com"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babarrotado\b|\babundante\b|\badornado\b|\baglomerado\b|\baglomerar\b|\bamanteigado\b|\bamontoado\b|\basfaltado\b|\baspergido\b|\bborrifado\b|\bcheio\b|\bcoberto\b|\bdecorado\b|\bdesarrumado\b|\bdourado\b|\bdrapeado\b|\bembelezado\b|\bemperrado\b|\bempilhado\b|\bempoeirado\b|\bencapotado\b|\bencasacado\b|\bencoberto\b|\benfeitado\b|\bengatinhar\b|\benvernizado\b|\bescovado\b|\besmaltado\b|\bespalhado\b|\bforrado\b|\binjetado\b|\blacado\b|\bladrilhado\b|\blotado\b|\bmanchado\b|\bornamentado\b|\bpavimentado\b|\bpendurado\b|\bpintado\b|\bpolvilhado\b|\bpontilhado\b|\bpopulacional\b|\bpreenchido\b|\bproliferar\b|\brastejante\b|\brebocado\b|\brecheado\b|\bregado\b|\brepleto\b|\brespingado\b|\bsalpicado\b|\bsuperlotado\b", str(x))))
  df_frame["Abusar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babusar\b|\babuso\b", str(x))))
  df_frame["Acabar_de_descobrir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bchocado\b", str(x))))
  df_frame["Ação_sucedida"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbem\ssucedido\b|\bbem-sucedido\b|\bbombar\b|\bdesandar\b", str(x))))
  df_frame["Aceitar_ou_recusar_a_agir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\brecusar\b|\bresistir\b", str(x))))
  df_frame["Acessórios_de_vestuário"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfita\b|\bmáscara\b", str(x))))
  df_frame["Ações_do_árbitro"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapitar\sfim\b|\bapitar\sinício\b|\bapitar\b|\bconceder\b|\bdecidir\b|\bdecisão\b|\bdesclassificar\b|\bdesqualificar\b|\bencerrar\b|\bexpulsar\b|\biniciar\b|\binterromper\b|\bmarcar\sfalta\b|\bmarcar\b|\bmostrar\b|\bparalisar\b|\bparar\b|\breiniciar\b|\bsuspender\b|\bterminar\b", str(x))))
  df_frame["Acomodação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacampamento\b|\bacomodação\b|\balbergue\b|\balojamento\b|\bapart-hotel\b|\bapartamento\b|\bbangalô\b|\bcafofo\b|\bcamping\b|\bcasa\sde\sférias\b|\bcasa\b|\bchácara\b|\bchalé\b|\bcomplexo\sde\scondomínio\b|\bcomplexo\sresidencial\b|\bestância\b|\bgranja\b|\bhospedagem\sdomiciliar\b|\bhospedagem\b|\bhóspede\b|\bhostel\b|\bhotel\sfazenda\b|\bhotel\b|\bhotelaria\b|\bmotel\b|\bpensão\b|\bpousada\b|\brancho\b|\bresort\b|\bsítio\b", str(x))))
  df_frame["Acompanhamento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\ba\ssós\b|\bacompanhar\b|\bcom\b|\bcom\b|\bcompanhia\b|\bindividual\b|\bjunto\b|\bsozinho\b|\bunido\b", str(x))))
  df_frame["Acordar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacordar\b", str(x))))
  df_frame["Adequação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badequação\b|\badequado\b|\badequar\b|\bambientar\b|\bapropriado\b|\bbom\ssenso\b|\bbom\b|\bcerto\b|\bclimatização\b|\bclimatizar\b|\bcorreto\b|\binadequação\b|\binadequado\b|\binapropriado\b|\bindicado\b|\bprestar\b|\bpróprio\b|\bservir\b", str(x))))
  df_frame["Adição"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacrescentar\b|\badicionar\b|\bmais\b|\bsomar\b", str(x))))
  df_frame["Adjacência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badjacência\b|\badjacente\b|\bcontiguidade\b|\bcontíguo\b|\bestar\sjunto\b|\bjuntar\b|\blimitante\b|\blimitar\b|\bvizinho\b", str(x))))
  df_frame["Adotar_seleção"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badoção\b|\badotar\b|\bassumir\b|\bseguir\b", str(x))))
  df_frame["Adquirir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconseguir\b|\bganhar\b|\bobtido\b|\breconquistar\b|\brecuperar\b", str(x))))
  df_frame["Afetar_pelo_evento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacontecer\b|\bassolar\b|\batingir\b|\blevar\b|\bsofrer\b|\bver\b", str(x))))
  df_frame["Afirmar_ou_negar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\binegável\b|\bnegar\b|\bnegativo\b", str(x))))
  df_frame["Agir_intencionalmente"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bação\b|\bagente\b|\bagir\b|\batitude\b|\batividade\b|\bato\b|\bator\b|\batuar\b|\bconduzir\b|\bcoordenação\b|\bdesempenho\b|\bempenhar\b|\bempreender\b|\bengajar\b|\bexecução\b|\bexecutar\b|\bfase\b|\bfazer\b|\bfeito\b|\bgesto\b|\bmedida\b|\bmissão\b|\bmovimento\b|\bobra\b|\bpasso\b|\bperfazer\b|\bpromover\b|\brealizar\b", str(x))))
  df_frame["Agregado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacervo\b|\baglomerado\b|\bamontoado\b|\banfitrião\b|\bassembléia\b|\bbancada\b|\bbanda\b|\bbando\b|\bbatalhão\b|\bcacho\b|\bcaravana\b|\bcardume\b|\bcasal\b|\bcírculo\ssocial\b|\bcírculo\b|\bclasse\b|\bcoleção\b|\bcolônia\b|\bcombinação\b|\bcombo\b|\bcomunidade\b|\bconjunto\b|\bcorja\b|\bcorpo\b|\bcorporação\b|\bdupla\b|\benxame\b|\bequipe\b|\bescola\b|\besquadra\b|\besquadrão\b|\bexército\b|\bfacção\b|\bfamília\b|\bfardo\b|\bfeixe\b|\bforça\b|\bfornada\b|\bfrota\b|\bgaláxia\b|\bgame\b|\bgangue\b|\bgentalha\b|\bgrupo\b|\bharém\b|\bhorda\b|\bjogo\b|\blegião\b|\blivro\b|\bmaço\b|\bmáfia\b|\bmaioria\b|\bmanada\b|\bmassa\b|\bmatilha\b|\bmonte\b|\bmultidão\b|\bmultiplicidade\b|\bmultiplicidade\b|\bmuvuca\b|\bninhada\b|\bpacote\b|\bpanelinha\b|\bpartido\b|\bpelotão\b|\bpenca\b|\bpilha\b|\bplebe\b|\bpopulação\b|\bpopulacho\b|\bpunhado\b|\bquarteto\b|\bquinteto\b|\bralé\b|\brebanho\b|\brepertório\b|\bsafra\b|\bsexteto\b|\bsortimento\b|\btime\b|\btribo\b|\btrio\b|\btripulação\b|\btropel\b|\bturma\b|\buniverso\b|\bvariedade\b", str(x))))
  df_frame["Agricultura"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcultivo\b", str(x))))
  df_frame["Agrupar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bencontrar\b", str(x))))
  df_frame["Ajustar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badaptar\b|\badequar\b", str(x))))
  df_frame["Alcance"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdistância\b|\bvista\b", str(x))))
  df_frame["Alimentação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baçaiteria\b|\bbar-restaurante\b|\bbar\b|\bbarraca\b|\bbarraquinha\b|\bbirosca\b|\bbistrô\b|\bbonbonnière\b|\bboteco\b|\bbotequim\b|\bbufê\b|\bbuffet\b|\bcafé\b|\bcafeteria\b|\bcervejaria\b|\bchampanharia\b|\bchampanheria\b|\bchocolateria\b|\bchoperia\b|\bchurrascaria\b|\bdrinkeria\b|\bfast-food\b|\bfood\struck\b|\bhamburgueria\b|\blanchonete\b|\bloja\sde\sbebidas\salcoólicas\b|\bloja\sde\sbebidas\b|\bloja\sde\scervejas\b|\bmercado\b|\bmercearia\b|\bpadaria\b|\bpastelaria\b|\bpé-sujo\b|\bpesque-pague\b|\bpesqueiro\b|\bpizzaria\b|\bpodrão\b|\bpub\b|\brestaurante\sárabe\b|\brestaurante\sbrasileiro\b|\brestaurante\schinês\b|\brestaurante\seuropeu\b|\brestaurante\sfrancês\b|\brestaurante\sitaliano\b|\brestaurante\sjaponês\b|\brestaurante\smexicano\b|\brestaurante\smineiro\b|\brestaurante\sportuguês\b|\brestaurante\sself-service\b|\brestaurante\svegano\b|\brestaurante\b|\brodízio\b|\bself-service\b|\bsorveteria\b|\bsupermercado\b|\btaberna\b|\btacacazeira\b|\btemakeria\b|\btrailer\b|\bvegetariano\b", str(x))))
  df_frame["Alimentos_e_bebidas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacarajé\b|\bagnolini\b|\bágua\sde\scoco\b|\balimento\b|\bamor\sperfeito\b|\barroz-doce\b|\bbaguete\b|\bbanana\sfrita\b|\bbarreado\b|\bbatata-frita\b|\bbebida\salcoólica\b|\bbebida\b|\bbiscoito\b|\bbisteca\b|\bbobó\b|\bbolinho\b|\bbolo\b|\bbreja\b|\bbrigadeiro\b|\bbruschetta\b|\bbuchada\sde\sbode\b|\bburguer\b|\bburrata\b|\bburrito\b|\bcafé\b|\bcaipirinha\b|\bcaipiríssima\b|\bcaipiroska\b|\bcaipisaquê\b|\bcaipivodka\b|\bcajuína\b|\bcajuzinho\b|\bcalda\b|\bcaldeirada\b|\bcaldo\sde\scana\b|\bcaldo\b|\bcanjica\b|\bcanjiquinha\b|\bcapuccino\b|\bcarioca\b|\bcarpaccio\b|\bcaruru\b|\bcatchup\b|\bcereal\b|\bchampagne\b|\bchampanhe\b|\bcheeseburger\b|\bchimarrão\b|\bchope\b|\bchopp\b|\bchouriço\b|\bchurrasco\b|\bchurro\b|\bcocada\b|\bcomida\scaiçara\b|\bcomida\b|\bcompota\b|\bcoquetel\b|\bcroquete\b|\bcuca\b|\bcurau\b|\bdobradinha\b|\bdoce\b|\bdrink\b|\bdrinque\b|\beinsbein\b|\bempada\b|\bespeciaria\b|\bespresso\b|\bexpresso\b|\bfarofa\b|\bfeijão-tropeiro\b|\bfeijoada\b|\bfrutos\sdo\smar\b|\bgalinha\sao\smolho\spardo\b|\bgalinha\sensopada\b|\bgelato\b|\bgeleia\b|\bgengibre\b|\bgoiabada\b|\bgordice\b|\bguloseima\b|\bhambúrguer\b|\bhummus\b|\biguaria\b|\bkafta\b|\bkibe\b|\bleitão\sà\spururuca\b|\blicor\b|\blimão\b|\blimonada\b|\bmaniçoba\b|\bmarguerita\b|\bmilkshake\b|\bmolho\b|\bmoqueca\scapixaba\b|\bmoqueca\b|\bmousse\b|\bmozzarela\b|\bnachos\b|\bnoz-moscada\b|\bovo\b|\bpaella\sde\smariscos\b|\bpaella\b|\bpamonha\b|\bpanqueca\b|\bpastel\b|\bpé-de-moleque\b|\bpicadinho\b|\bpipoca\b|\bpirão\b|\bpirarucu\sde\scasaca\b|\bpizza\b|\bpodrão\b|\bpolenta\b|\bprato\stípico\b|\bprato\b|\bpudim\b|\bquentão\b|\bquibe\b|\brabada\b|\brefeição\b|\brefrigerante\b|\brisoto\b|\brosca\b|\bsaideira\b|\bsalada\b|\bsalgado\b|\bsalpicão\b|\bsanduíche\sde\spernil\scom\sabacaxi\b|\bsanduíche\b|\bsarapatel\b|\bsashimi\b|\bsobrecoxa\b|\bsonho\b|\bsopa\sagnolini\b|\bsopa\b|\bsorvete\b|\bsuco\b|\bsushi\b|\btacacá\b|\btangerina\b|\btapa\b|\btererê\b|\btorta\b|\buísque\b|\bvaca\satolada\b|\bvatapá\b|\bwhisky\b", str(x))))
  df_frame["Alternatividade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bem\svez\sde\b", str(x))))
  df_frame["Alugar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balugar\b", str(x))))
  df_frame["Alvo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\ba\b|\bpara\b", str(x))))
  df_frame["Amalgamação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bentrelaçar\b|\bmisto\b|\bmistura\b|\bmisturar\b|\bunificado\b", str(x))))
  df_frame["Amigável_ou_hostil"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badversário\b|\binimigo\b", str(x))))
  df_frame["Andar_de_veículo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bandar\b|\bcruzeiro\b|\bfazer\smochilão\b|\bnavegação\b|\bnavegar\b|\bpegar\b|\bvelejar\b|\bvoar\b|\bvoo\b", str(x))))
  df_frame["Anexação_incoativa"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bencontrar\b", str(x))))
  df_frame["Anexar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\banexar\b|\binterligar\b|\bligar\b", str(x))))
  df_frame["Animais"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babelha\b|\bácaro\b|\banimal\b|\baraponga\b|\bbesouro\b|\bboi\b|\bborboleta\b|\bcachorro\b|\bcão\b|\bcarneiro\b|\bcavalo\b|\bcavaquinha\b|\bchimpanzé\b|\bcordeiro\b|\belefante\b|\bfauna\b|\bfilhote\b|\bfrango\b|\bgalinha\b|\bgalo\b|\bgato\b|\bgirafa\b|\binseto\b|\bjoaninha\b|\bleão\b|\bleitão\b|\blobo\b|\blouva-a-deus\b|\bmacaco\b|\bmosquito\b|\bovelha\b|\bpássaro\b|\bpeixe\b|\bpeixinho\b|\bpet\b|\bpolvo\b|\bporco\b|\braia\b|\braposa\b|\bserpente\b|\bsiri\b|\btigre\b|\burubu\b|\bvaca\b|\bvaga-lume\b|\bzebra\b", str(x))))
  df_frame["Aparato"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bandroid\b|\baplicativo\b|\bar-condicionado\b|\bequipamento\b|\binformática\b|\bredes\ssociais\b|\bserra\b|\btecnologia\b|\busuário\b", str(x))))
  df_frame["Aparecer_em"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baparecer\b", str(x))))
  df_frame["Aplicar_calor"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdourar\b", str(x))))
  df_frame["Apoiar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapoiar\b|\bapoio\b", str(x))))
  df_frame["Apostar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapostar\b", str(x))))
  df_frame["Área_biológica"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcerrado\b|\bdeserto\b|\bfloresta\b|\bmato\b|\boásis\b|\bpântano\b|\bpradaria\b|\bselva\b", str(x))))
  df_frame["Arma"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barma\b|\bmaça\b|\btesoura\b|\btorpedo\b", str(x))))
  df_frame["Armadilha"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barmadilha\b", str(x))))
  df_frame["Armazenar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bguardado\b|\bmanter\b|\breservar\b", str(x))))
  df_frame["Arquitetura_de_conexão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdegrau\b|\bjanela\b|\bporta\b", str(x))))
  df_frame["Arrumar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barrumado\b|\barrumar\b|\bcaprichado\b|\bequipar\b|\borganizado\b", str(x))))
  df_frame["Artefato"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barrastão\b|\basa-delta\b|\bbalão\b|\bbandeja\b|\bbebedouro\b|\bbico\sde\smamadeira\b|\bbolsa\b|\bbrinquedo\b|\bcadeira\b|\bcatálogo\b|\bcelular\b|\bchupeta\b|\bchuveiro\b|\bcoberta\b|\bcobertor\b|\bcomputador\b|\bconcha\b|\bcontrole\b|\bespelho\b|\bestilete\b|\bfio\b|\bfrigideira\b|\bimpressora\b|\binternet\b|\blâmina\b|\blençol\b|\blente\b|\bluva\scirúrgica\b|\bmala\b|\bmesa\b|\bmesa\b|\bmochila\b|\bmontanha\srussa\b|\borigami\b|\bpano\b|\bpapel\stoalha\b|\bpipa\b|\bplaca\b|\bpneu\b|\bprato\b|\bprisma\b|\brádio\b|\btecnologia\b|\btelefone\b|\btelevisão\b|\btesouro\b|\btoboágua\b|\btúmulo\b|\bvideo\sgame\b|\bvideo-game\b", str(x))))
  df_frame["Artesanato"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barte\b|\bciência\b|\bcrochê\b|\bofício\b", str(x))))
  df_frame["Artes_performáticas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barte\b|\bballet\b|\bcantar\b|\bencenação\b|\bensaiar\b|\bFazer\b|\bjazz\b|\bmusical\b|\bpantomima\b|\bpeça\sde\steatro\b|\bpeça\b|\bperformance\b|\bperformar\b|\bsapateado\b|\bteatral\b|\bteatro\b|\btocar\b", str(x))))
  df_frame["Artificialidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baparentemente\b|\benganosa\b", str(x))))
  df_frame["Assear"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\banti-higiênico\b|\bbanho\b|\benxaguar\b|\blavar\b|\blavável\b|\blimpar\b", str(x))))
  df_frame["Assistência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacudir\b|\bajudar\b|\batendimento\b|\bauxílio\b|\bcuidar\b", str(x))))
  df_frame["Assistir_a_evento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bassistir\b|\bcomparecer\b|\bfrequentar\b|\bir\b|\bver\b", str(x))))
  df_frame["Associação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\brelativo\b", str(x))))
  df_frame["Atacar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bagressor\b", str(x))))
  df_frame["Atenção"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\batenção\b|\batender\b|\bchamar\satenção\b|\bdar\sbola\b|\bligar\b", str(x))))
  df_frame["Atividade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\batividade\b|\bbrincadeira\b|\bbrincar\b|\bdivertimento\b|\bguerrinha\b|\bjogar\b|\bpique-esconde\b|\bsensação\b", str(x))))
  df_frame["Atividades_do_turista"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bartesanato\b|\barvorismo\b|\bbanhar\b|\bbrincar\b|\bcapoeira\b|\bfrevo\b|\bpatinar\b|\bpintura\b|\bsinuca\b|\bsurfar\b|\btirolesa\b", str(x))))
  df_frame["Atividade_em_andamento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcontinuar\b|\bdecorrer\b|\bficar\b|\bpassar\b|\bprosseguir\b|\bviver\b", str(x))))
  df_frame["Atividade_iniciar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcair\b|\bcomeçar\b|\bdesencadear\b|\bentrar\b|\bestrear\b|\bgerar\b|\binauguração\b|\binaugurar\b|\biniciante\b|\biniciar\b|\binstituir\b|\bpassar\b|\bprincipiar\b", str(x))))
  df_frame["Atividade_interromper"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdeixar\b|\bparar\b", str(x))))
  df_frame["Atividade_pausar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcortar\b|\bencerrar\b|\bimobilizar\b|\bparar\b|\breter\b", str(x))))
  df_frame["Atividade_preparada"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdisponível\b|\bpreparado\b|\bpreparo\b|\bpronto\b", str(x))))
  df_frame["Atividade_preparar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bestruturar\b|\borganizar\b|\bpreparar\b|\bpreparo\b", str(x))))
  df_frame["Atividade_terminar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babdicar\b|\bacabar\b|\bconcluir\b|\bdesistir\b|\bformar\b", str(x))))
  df_frame["Atletas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badversário\b|\batleta\b|\bbateria\b|\bclube\b|\bcompetidor\b|\bdesafiante\b|\bdesportista\b|\bdueto\b|\bdupla\b|\bequipe\b|\besportista\b|\bjogador\b|\boponente\b|\bparaolímpico\b|\bparticipante\b|\bpelotão\b|\brival\b|\bseleção\b|\btime\b|\btrio\b", str(x))))
  df_frame["Atletas_por_esporte"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bamazona\b|\barqueiro\b|\barremessador\b|\batirador\b|\bboleiro\b|\bboxeador\b|\bcaiaquista\b|\bcanoísta\b|\bcarateca\b|\bcavaleiro\b|\bciclista\b|\bcorredor\b|\bdecatleta\b|\bescalador\b|\besgrimista\b|\bfundista\b|\bginasta\b|\bgolfista\b|\bgrequista\b|\bhalterofilista\b|\bheptatleta\b|\bjogador\sde\sbadminton\b|\bjogador\sde\sbasquete\b|\bjogador\sde\sbeisebol\b|\bjogador\sde\sfutebol\b|\bjogador\sde\shandball\b|\bjogador\sde\shóquei\ssobre\sgrama\b|\bjogador\sde\spólo\b|\bjogador\sde\srúgbi\b|\bjogador\sde\ssoftbol\b|\bjogador\sde\svôlei\b|\bjudoca\b|\blançador\b|\blevantador\b|\blutador\b|\bmaratonista\b|\bmarchador\b|\bmeio-fundista\b|\bmesatenista\b|\bnadador\b|\bpentatleta\b|\bpesista\b|\bpugilista\b|\bremador\b|\bsaltador\b|\bskatista\b|\bsurfista\b|\btenista\b|\btrampoliner\b|\btrampolinista\b|\btriatleta\b|\bvelejador\b|\bvelocista\b", str(x))))
  df_frame["Atletas_por_posição"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babertura\b|\bala-armador\b|\bala-pivô\b|\bala\b|\bapanhador\b|\barmador\scentral\b|\barmador\b|\barremessador\b|\bartilheiro\b|\basa\b|\batacante\b|\bataque\b|\bavançado\b|\bbatedor\b|\bcabeça\sde\sárea\b|\bcapitão\b|\bcentral\sarmador\b|\bcentro\b|\bcentroavante\b|\bcontra-proa\b|\bcontra-voga\b|\bcraque\b|\bdefensor\sexterno\b|\bdefensor\sinterno\b|\bdefensor\b|\bdefesa\scentral\b|\bdefesa\sdireita\b|\bdefesa\sesquerda\b|\bdefesa\b|\bentrada\sde\srede\b|\bextremo\b|\bflanqueador\b|\bfly\shalf\b|\bfull\sback\b|\bgoleiro\b|\bhooker\b|\blançador\b|\blateral\b|\bleme\b|\blevantador\b|\blíbero\b|\bmédio\scentral\b|\bmédio\b|\bmeia\sarmador\b|\bmeia\sdireita\b|\bmeia\sesquerda\b|\bmeia\b|\bmeio\sde\scampo\b|\bmeio\sde\srede\b|\bmeio\sscrum\b|\bmeio-campista\b|\bmeio-campo\b|\bmeio\b|\bnúmero\scinco\b|\bnúmero\sdois\b|\bnúmero\soito\b|\bnúmero\squatro\b|\bnúmero\sseis\b|\bnúmero\ssete\b|\bnúmero\strês\b|\boitavo\b|\bpassador\b|\bpilar\saberto\b|\bpilar\sfechado\b|\bpivô\b|\bponta\sdireita\b|\bponta\sesquerda\b|\bponta\b|\bponteiro\b|\bposição\b|\bprimeira\slinha\b|\bprimeiro\scentro\b|\bprimeiro\slateral\b|\bprimeiro\sponta\b|\bproa\b|\brebatedor\b|\brecebedor\b|\breceptor\b|\breserva\b|\bsacador\b|\bsaída\sde\srede\b|\bsegunda\slinha\b|\bsegundo\scentro\b|\bsegundo\slateral\b|\bsegundo\sponta\b|\bservidor\b|\bsota-proa\b|\bsota-voga\b|\btalonador\b|\bterceira\slinha\b|\btimoneiro\b|\btitular\b|\bvoga\b|\bvolante\b|\bzaga\b|\bzagueiro\b", str(x))))
  df_frame["Atrair_turistas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapresentar\b|\batração\b|\batrair\b|\batrativo\b|\batrativo\b|\bconvidar\b|\bdestacar-se\b|\bdestino\b|\blevar\b|\boferecer\b|\breservar\b|\bsurpreender\b", str(x))))
  df_frame["Atravessar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bascender\b|\bascensão\b|\batravessar\b|\bcircular\b|\bcruzamento\b|\bcruzar\b|\bdecida\b|\bdescer\b|\bmontar\b|\bpassar\b|\bpular\b|\brodear\b|\bsaltar\b", str(x))))
  df_frame["Atribuição_de_nome"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bchamar-se\b|\bdublado\b", str(x))))
  df_frame["Atributos"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\batributo\b|\bqualidade\b", str(x))))
  df_frame["Atributos_graduáveis"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bsuper\b", str(x))))
  df_frame["Atributos_mensuráveis"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balto\b|\bamplo\b|\bapertado\b|\bbaixo\b|\bcaloso\b|\bcurto\b|\belevado\b|\bespesso\b|\bestreito\b|\bfino\b|\bfundo\b|\bgrosso\b|\bleve\b|\blongo\b|\bmurcho\b|\bpesado\b|\bprofundo\b", str(x))))
  df_frame["Auto_movimento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balongamento\b|\bandar\b|\bcambalhota\b|\bcaminhada\b|\bcaminhar\b|\bcircular\b|\bcorrer\b|\bdança\b|\bdançar\b|\bdesfilar\b|\besquentar\b|\bir\b|\bmergulhar\b|\bmovimento\b|\bnadar\b|\bpisar\b|\bvoar\b", str(x))))
  df_frame["Avaliação_de_moralidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babsurdamente\b|\babsurdo\b|\bantiético\b|\bbaixo\b|\bbom\b|\bcanalha\b|\bcandongueiro\b|\bcerto\b|\bdegenerado\b|\bdepravação\b|\bdepravado\b|\bdescente\b|\bdesonroso\b|\bdoloso\b|\berrado\b|\berrar\b|\berro\b|\bescuro\b|\bético\b|\bgeneroso\b|\bhorroroso\b|\bimoral\b|\bimpróprio\b|\binescrupuloso\b|\biníquo\b|\binsidioso\b|\bíntegro\b|\bjusto\b|\bmaldoso\b|\bmau\b|\bmelhor\b|\bmenos\b|\bmoral\b|\bnefasto\b|\bobsceno\b|\bpecaminoso\b|\bpecar\b|\bperverso\b|\bpior\b|\bréprobo\b|\brepulsivo\b|\bvil\b|\bvirtuoso\b", str(x))))
  df_frame["Avaliar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bachar\b|\bavaliação\b|\bavaliar\b|\bbom\b|\bbom\b|\bimportar\b|\bjulgamento\b|\bjulgar\b|\blamentável\b|\bmaravilhoso\b|\bmelhor\b", str(x))))
  df_frame["Boa_vontade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bboa-vontade\b|\bdispor\b", str(x))))
  df_frame["Caçar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcaça\b|\bcaçada\b|\bcaçador\b|\bcaçar\b|\bpescar\b", str(x))))
  df_frame["Cair_no_sono"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badormecer\b|\bdesmaiar\b", str(x))))
  df_frame["Campos"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bagropecuária\b|\bâmbito\b|\barquitetura\b|\barte\b|\bartes\svisuais\b|\bartístico\b|\bastrofísica\b|\bastrofísico\b|\bastrologia\b|\bastronomia\b|\baviação\b|\bcampo\b|\bciência\b|\bcientífico\b|\bcosmológico\b|\bcrítica\b|\bculinária\b|\bcultura\b|\bdança\b|\bdemografia\b|\bdesenho\b|\bdisciplina\b|\bdomínio\b|\bdrama\b|\becologia\b|\beconomia\b|\bfilosofia\b|\bfinança\b|\bfísica\b|\bgastronomia\b|\bgeografia\b|\bhistória\b|\bhumanas\b|\bindustrialização\b|\binglês\b|\blazer\b|\blíngua\b|\bmatemática\b|\bmorfologia\b|\bmúsica\b|\bpoesia\b|\bquântico\b|\brubrica\b|\bsemântica\b|\btelecomunicação\b", str(x))))
  df_frame["Caos"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbagunça\b|\bbagunçado\b|\bturbulento\b", str(x))))
  df_frame["Capacidade_ação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baptidão\b|\bapto\b|\bcapacidade\b|\bcapacitar\b|\bcapaz\b|\bcompetência\b|\bconseguir\b|\bdar\b|\bdom\b|\bhabilidade\b|\bimpotente\b|\bincapaz\b|\bpoder\b|\btalento\b", str(x))))
  df_frame["Careza"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacessibilidade\b|\bacessível\b|\bbaixo\scusto\b|\bbarato\b|\bcaro\b|\bcustar\b|\bcusto\b|\bdespesa\b|\bexorbitante\b|\bgratuito\b|\boneroso\b|\bsuperfaturado\b|\bvaler\b", str(x))))
  df_frame["Catástrofe"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcrise\b|\bfatalidade\b|\bincidente\b", str(x))))
  df_frame["Categorização"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bclassificação\b|\bclassificado\b|\bclassificar\b|\bconsiderado\b|\bconsiderar\b|\bdeclarar\b|\binterpretar\b|\breconhecer\b", str(x))))
  df_frame["Causalidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bassim\b|\bcausa\b|\bcausar\b|\bconsequência\b|\bconsequentemente\b|\bculminar\b|\bdar\b|\bde\smodo\sque\b|\bdeixar\b|\bdesencadear\b|\bdespertar\b|\bdever\b|\befeito\b|\bentão\b|\bfazer\scom\sque\b|\bfazer\b|\bmedida\b|\bpor\b|\bporque\b|\bportanto\b|\bprovocar\b|\brender\b|\bresponsável\b|\bresultado\b|\bresultado\b|\bresultar\b|\btornar\b", str(x))))
  df_frame["Causar_acordar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacordar\b", str(x))))
  df_frame["Causar_continuar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacalentar\b|\bpreservar\b", str(x))))
  df_frame["Causar_dano"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacertar\b|\bapedrejar\b|\barranhar\b|\bbater\b|\bferir\b|\bmachucar\b|\btorcer\b", str(x))))
  df_frame["Causar_emoção"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdeixar\b", str(x))))
  df_frame["Causar_estar_incluído"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bincluir\b", str(x))))
  df_frame["Causar_expansão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bampliar\b|\baumentar\b|\bcaprichar\b|\bcrescimento\b|\bdiminuir\b|\besticar\b|\bexpandir\b|\bminimizar\b", str(x))))
  df_frame["Causar_fazer_progresso"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdedicar\b|\besmerar\b|\binvestimento\b|\binvestir\b|\bsofisticar\b", str(x))))
  df_frame["Causar_ficar_afiado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bafiar\b", str(x))))
  df_frame["Causar_ficar_molhado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmolho\b", str(x))))
  df_frame["Causar_ficar_seco"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\benxugar\b|\bsecar\b", str(x))))
  df_frame["Causar_fragmentar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barrebentar\b|\bquebrar\b|\bromper\b", str(x))))
  df_frame["Causar_fundir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcombinar\b|\bgrupo\b|\bjuntar\b|\breunir\b", str(x))))
  df_frame["Causar_movimento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bagitar\b|\barejar\b|\batrair\b|\bempurrar\b|\bjogar\b|\blançar\b|\blargar\b|\blevantar\b|\bmovimentar\b|\bsacar\b|\bsubir\b|\btampar\b", str(x))))
  df_frame["Causar_movimento_fluídico"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bentornar\b", str(x))))
  df_frame["Causar_mudança"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balterar\b|\bcustomizado\b|\bmodificador\b|\bmudar\b|\btransformar\b|\btrocar\b", str(x))))
  df_frame["Causar_mudança_de_força"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\breforçar\b", str(x))))
  df_frame["Causar_mudança_de_posição_em_uma_escala"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\breduzir\b|\bvalorizar\b", str(x))))
  df_frame["Causar_mudança_de_temperatura"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\brefrigerar\b", str(x))))
  df_frame["Causar_mudar_de_lugar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bchacoalhar\b", str(x))))
  df_frame["Causar_perceber"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapontar\b|\bapresentação\b|\bapresentar\b|\bassinalar\b|\bdemonstrar\b|\besbanjar\b|\bexpor\b|\bexposição\b|\biluminar\b|\blançar\b|\bmostrar\b|\bpublicar\b|\brepresentar\b|\brevelar\b", str(x))))
  df_frame["Causar_retomar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\breviver\b", str(x))))
  df_frame["Causar_terminar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdissipar\b|\bterminar\b", str(x))))
  df_frame["Ceder"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bentregar\b|\bimplacavelmente\b", str(x))))
  df_frame["Cenário_da_história"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\brelembrar\b", str(x))))
  df_frame["Cenário_de_aquisição"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baquisição\b", str(x))))
  df_frame["Cenário_de_doação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcontribuir\b|\bcortesia\b", str(x))))
  df_frame["Cenário_de_importação_e_exportação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bexportador\b", str(x))))
  df_frame["Cenário_de_interação_médica"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacidentado\b|\bcirurgia\b|\bcirúrgico\b|\bdegenerativo\b|\bdificuldade\b|\bponto\b|\bvítima\b", str(x))))
  df_frame["Cenário_de_obrigação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdever\b", str(x))))
  df_frame["Cenário_do_comércio"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcobrar\b|\bcomércio\b|\bdesconto\b|\bpreço\b|\bserviço\b|\btarifa\b", str(x))))
  df_frame["Cenário_do_turismo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bturismo\b", str(x))))
  df_frame["Cenário_do_turismo_estada"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bestada\b|\bestadia\b|\bestar\b", str(x))))
  df_frame["Cenário_do_turismo_partida"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bida\b|\bir\sembora\b|\bpartida\b|\bpartir\b|\bsair\b", str(x))))
  df_frame["Cenário_visita_chegada"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bChega\b", str(x))))
  df_frame["Cercanias"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bao\sredor\sde\b|\barredor\b|\bcercar\b|\bcircundar\b|\benvolto\b|\bpor\b|\bredondeza\b|\bredor\b|\brodeado\b", str(x))))
  df_frame["Cerimônias"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babertura\b|\bcerimônia\b|\bencerramento\b|\bmedalha\b", str(x))))
  df_frame["Certeza"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bassegurar\b|\bcertamente\b|\bdecerto\b|\bdúvida\b|\benigmático\b|\bexatamente\b|\bincerteza\b|\bmistério\b|\bmisterioso\b", str(x))))
  df_frame["Chance"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bimpossível\b|\bpossível\b|\btalvez\b|\btender\b", str(x))))
  df_frame["Chegada"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baportar\b|\bchegada\b|\bchegar\b", str(x))))
  df_frame["Chegada_ao_alojamento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcheck-in\b", str(x))))
  df_frame["Chegada_ao_destino"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdesembarcar\b|\bdesembarque\b", str(x))))
  df_frame["Chegar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baparecer\b|\baportar\b|\baproximar\b|\bchegar\b|\bentrar\b|\bregressar\b|\bretornar\b|\bvir\b|\bvoltar\b", str(x))))
  df_frame["Chegar_a_acreditar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bchutar\b|\bconclusão\b", str(x))))
  df_frame["Circunstâncias_contrárias"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapesar\sde\b|\bmesmo\sque\b", str(x))))
  df_frame["Classificação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bgraduação\b", str(x))))
  df_frame["Classificação_biológica"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bespécie\b", str(x))))
  df_frame["Clima"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bártico\b|\bavalanche\b|\bcerração\b|\bclima\b|\bdilúvio\b|\benchente\b|\benxurrada\b|\bgeada\b|\binundação\b|\bnévoa\b|\bonda\b|\bressaca\b|\bseco\b|\bsol\b|\btempestade\b|\btropical\b|\búmido\b|\bvendaval\b", str(x))))
  df_frame["Codificar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bexpressão\b|\bfrase\b|\bpalavra\b", str(x))))
  df_frame["Cogitação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcismar\b|\bconcentrar\b|\bcontemplação\b|\bcontemplativo\b|\blevar\sem\sconta\b|\bpensamento\b|\bpensar\b|\bponderar\b|\brepensar\b|\bvir\sà\smente\b", str(x))))
  df_frame["Coincidência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcasualidade\b|\bcoincidentemente\b", str(x))))
  df_frame["Colaboração"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcolaborar\b|\binteração\b", str(x))))
  df_frame["Colocação_espacial"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\blá\b", str(x))))
  df_frame["Colocação_temporal"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bà\smedida\sque\b|\ba\b|\bagora\b|\bantigamente\b|\bantigo\b|\bao\slongo\sde\b|\batual\b|\batualmente\b|\bdentro\sde\b|\bdurante\b|\bem\b|\benquanto\b|\bentão\b|\bfuturo\b|\bfuturo\b|\bhoje\sem\sdia\b|\bhoje\b|\bimediatamente\b|\bmais\b|\bmoderno\b|\bpor\svolta\sde\b|\bpor\b|\bpré-histórico\b|\bquando\b|\bquando\b|\brecentemente\b|\btão\slogo\b|\búltimamente\b", str(x))))
  df_frame["Colocar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balinhamento\b|\baplicar\b|\bcolocar\b|\bestacionar\b|\blevar\b|\bmergulhar\b|\bparar\b|\bpendurar\b|\bpõem\b|\bpôr\b", str(x))))
  df_frame["Colonização"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcolonizar\b|\binstalar\b", str(x))))
  df_frame["Comércio_comprar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badquirir\b|\bcliente\b|\bcompra\b|\bcomprar\b|\bconsumidor\b", str(x))))
  df_frame["Comércio_pagar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcouvert\b|\bimposto\b|\bpagamento\b", str(x))))
  df_frame["Comércio_receber"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcobrar\b", str(x))))
  df_frame["Comércio_vender"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomercializar\b|\bleilão\b|\bpromoção\b|\bvenda\b|\bvender\b", str(x))))
  df_frame["Comissão_técnica"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\banalista\sde\sdesempenho\b|\bauxiliar\stécnico\b|\bauxiliar\b|\bchef\b|\bcomissão\stécnica\b|\bcoordenador\b|\bcozinheiro\b|\bdiretor\b|\bfisiologista\b|\bfisioterapeuta\b|\bfotógrafo\b|\bgerente\b|\binstrutor\b|\bmassagista\b|\bmédico\b|\bnutricionista\b|\bobservador\stécnico\b|\bolheiro\b|\bpreparador\sde\sgoleiro\b|\bpreparador\sfísico\b|\bpsicólogo\b|\broupeiro\b|\bsegurança\b|\bsupervisor\b|\btécnico\b|\btreinador\sassistente\b|\btreinador\b|\bveterinário\b", str(x))))
  df_frame["Comparação_avaliativa"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomparar\b|\bdo\sque\b|\bequivaler\b|\bigualmente\b|\bincomparável\b|\blonge\b|\bmais\b|\bmelhor\b|\bmelhorar\b|\bmenor\b|\bpiorar\b", str(x))))
  df_frame["Comparecer"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bauto-atendimento\b|\bir\b", str(x))))
  df_frame["Compatibilidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcondizente\b|\bcondizer\b|\bconsistência\b|\bharmonia\b", str(x))))
  df_frame["Competição"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbrigar\b|\bcampeonato\b|\bcombate\b|\bcompetição\b|\bcompetidor\b|\bcompetir\b|\bcompetitivo\b|\bconcorrência\b|\bdesafio\b|\bdisputa\b|\bdisputar\b|\bencarar\b|\bgame\b|\bjogar\b|\bjogo\b|\bliga\b|\brivalidade\b|\btorneio\b", str(x))))
  df_frame["Completude"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomplementar\b|\bcompletar\b|\bcompleto\b|\btotal\b|\btotalidade\b", str(x))))
  df_frame["Complexidade_sistêmica"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomplexidade\b|\bsimples\b", str(x))))
  df_frame["Comprar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomprar\b|\bcompras\b|\bcusto\sbenefício\b", str(x))))
  df_frame["Comprometimento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bameaçar\b|\bjuramento\b|\bjurar\b|\bprometer\b", str(x))))
  df_frame["Comunicação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomunicar\b|\btransmitir\b", str(x))))
  df_frame["Comunicação_de_julgamento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcelebrar\b|\bcrítica\b|\bcriticar\b|\bcrítico\b", str(x))))
  df_frame["Comunicação_direta_de_julgamento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bobrigado\b|\bobrigado\b|\bparabéns\b", str(x))))
  df_frame["Comunicação_resposta"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\breplicar\b|\bresponder\b|\btornar\b", str(x))))
  df_frame["Comunicar_categorização"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdefinição\b|\bdefinir\b|\bdeterminação\b|\bdeterminado\b|\bretratar\b|\bsimbolizar\b", str(x))))
  df_frame["Concessão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bainda\sassim\b|\bainda\sque\b|\bapesar\sde\b|\bexceção\b|\bmas\b|\bna\srealidade\b|\bna\sverdade\b|\bno\sentanto\b", str(x))))
  df_frame["Condições_médicas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badoecer\b|\balérgico\b|\bárea\b|\bcadeirante\b|\bcadeirante\b|\bcâncer\b|\bcardíaco\b|\bcirúrgico\b|\bdeficiência\b|\bderrame\b|\bdiagnosticado\b|\bdistrofia\b|\bdoença\b|\bdoente\b|\bdoer\b|\bdor\b|\bepidemia\b|\besclerose\slateral\samiotrófica\b|\bfratura\b|\bgrávida\b|\bhemorragia\b|\binternado\b|\blesão\b|\bnervoso\b|\bpaciente\b|\bparada\srespiratória\b|\bpassar\smal\b|\bpatogénico\b|\bportador\b|\bproblema\srespiratório\b|\bproblema\b|\breceber\salta\b|\bsaúde\b|\bvítima\b|\bvômito\b", str(x))))
  df_frame["Conduta"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomportamento\b", str(x))))
  df_frame["Conectores"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcabo\b|\bcorda\b|\bfilamento\b|\bfita\sadesiva\b|\bgancho\b|\bluva\b", str(x))))
  df_frame["Conexão_cognitiva"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bassociação\b|\bassociado\b|\bconectar\b|\benvolver\b|\bligar\b|\bremontar\b|\bter\sa\sver\b", str(x))))
  df_frame["Confiar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconfiar\b", str(x))))
  df_frame["Confrontar_problema"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bencarar\b|\benfrentar\b|\bpassar\b", str(x))))
  df_frame["Conhecimento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacessível\b|\bachar\b|\bcompreender\b|\bconcepção\b|\bconhecer\b|\bconhecimento\b|\bconsiderar\b|\bcrer\b|\bdesavisado\b|\bdiscernimento\b|\bentender\b|\bfazer\sideia\b|\bideia\b|\bimaginação\b|\bimaginar\b|\binacessível\b|\binalcançável\b|\bnoção\b|\bpensamento\b|\bpensar\b|\brepensar\b|\bsabedoria\b|\bsaber\b|\bsuspeitar\b|\bter\b", str(x))))
  df_frame["Conquistar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconquistar\b|\btomar\sconta\b|\btomar\b", str(x))))
  df_frame["Construir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconceber\b|\bconstruir\b|\berguer\b|\binaugurar\b|\breforma\b|\breformado\b|\breformar\b|\bresidência\b", str(x))))
  df_frame["Contatar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bchamar\b|\bcontactar\b|\bcontato\b|\bcorresponder\b|\bligar\b|\btelefonar\b", str(x))))
  df_frame["Conter"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balojar\b|\bter\b", str(x))))
  df_frame["Contingência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdependência\b|\bdepender\b|\bindependente\b", str(x))))
  df_frame["Contra-atacar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcontra-atacar\b|\bcontra-ataque\b", str(x))))
  df_frame["Contratar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bterceirizar\b", str(x))))
  df_frame["Contrição"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barrepender-se\b|\barrepender\b|\barrependido\b|\barrependimento\b|\bcontrição\b|\bcontrito\b|\bculpa\b|\bculpado\b|\bdesculpa\b|\bdesculpar\b|\bimpenitente\b|\bpenalizado\b|\bpenitência\b|\bpenitente\b|\bremorso\b|\bremorso\b", str(x))))
  df_frame["Controlar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcondicionar\b|\bdeterminar\b|\bregulamentação\b|\bregulamentar\b|\bregulamento\b", str(x))))
  df_frame["Conversar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbate-papo\b|\bcontar\b|\bconversar\b|\bpiada\b|\bzoar\b", str(x))))
  df_frame["Convidado_e_anfitrião"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconvida\b|\bconvidado\b", str(x))))
  df_frame["Cor"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balaranjado\b|\bamarelado\b|\bamarelo\b|\bazul\b|\bbranco\b|\bcolorido\b|\bcor\b|\bpreto\b|\bverde-clara\b|\bverde\b|\bvermelho\b|\bvioleta\b", str(x))))
  df_frame["Cortar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcortar\b|\bcorte\b|\bpicadinha\b|\bpicado\b|\btosa\b", str(x))))
  df_frame["Costume"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacostumar\b|\bclássico\b|\bcostumar\b|\bcostume\b|\bparadigma\b|\btradição\b|\btradicional\b", str(x))))
  df_frame["Cotema"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconduzir\b|\bguiar\b|\bseguir\b", str(x))))
  df_frame["Crença_religiosa"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcredo\b|\bcrença\b|\bcrer\b|\bdevoto\b|\bfé\b|\bfiel\b|\breligião\b", str(x))))
  df_frame["Criação_culinária"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacrescentar\b|\badicionar\b|\bassado\b|\bassar\b|\bbater\b|\bcolocar\b|\bconsertar\b|\bcozinhar\b|\bcozinheiro\b|\bculinária\b|\bculinário\b|\bdecorar\b|\bdegustação\b|\bdeixar\b|\bdespejar\b|\bdourar\b|\bfazer\b|\bfeito\b|\bfritar\b|\bfrito\b|\bfritura\b|\bgratinar\b|\bgrelhar\b|\binventar\b|\bmexer\b|\bmilanesa\b|\bparmegiana\b|\bpiamontese\b|\bpicado\b|\bpolvilhar\b|\bpreparação\b|\bpreparar\b|\bsalgar\b|\btemperar\b", str(x))))
  df_frame["Criar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconceber\b|\bconsistir\b|\bcriar\b|\bformação\b|\bformar\b|\binovação\b|\binovar\b|\binstituir\b|\bproduzir\b", str(x))))
  df_frame["Criar_arte_física"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bartista\b|\bdesenhar\b|\bescalar\b|\besculpir\b|\bpintado\b|\bpintar\b|\btirar\sfoto\b", str(x))))
  df_frame["Criar_intencionalmente"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barmação\b|\barmar\b|\bconfigurar\b|\bcriar\b|\bdar\sorigem\b|\belaborar\b|\bestabelecer\b|\bfazer\b|\bfundado\b|\bfundar\b|\bideia\b|\bInventa\b|\bpreparar\b|\bprodutor\b|\bproduzir\b|\brealizar\b|\bter\b", str(x))))
  df_frame["Criar_representação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdesenhar\b|\besboçar\b|\besculpir\b|\bfoto\b|\bfotografar\b|\bfotografia\b|\bilustrado\b|\bpintar\b", str(x))))
  df_frame["Criminalidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcrime\b", str(x))))
  df_frame["Cultivar_alimentos"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcultivar\b", str(x))))
  df_frame["Cumprimento_de_normas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcontrariar\b|\bfiel\b|\bmandar\b|\bobedecer\b|\bseguir\b", str(x))))
  df_frame["Cura"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\btratamento\b", str(x))))
  df_frame["Dançar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bsambar\b", str(x))))
  df_frame["Danificar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barrebentar\b|\bfurar\b|\brasgar\b|\btrincar\b", str(x))))
  df_frame["Dar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbrinde\b|\bceder\b|\bdádiva\b|\bdar\b|\bdoação\b|\bprenda\b|\bpresente\b|\bsouvenir\b", str(x))))
  df_frame["Dar_à_luz"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdar\sorigem\b", str(x))))
  df_frame["Dar_forma"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\btorcer\b", str(x))))
  df_frame["Dar_impressão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baparentar\b|\baparente\b|\bcheirar\b|\bfeder\b|\bimpressão\b|\blembrar\b|\bparecer\b|\bprovar\b|\bsoar\b", str(x))))
  df_frame["Data_comemorativa"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baniversário\b|\bcarnaval\b|\bNatal\b", str(x))))
  df_frame["Decidir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdecidir\b|\bdecisão\b|\bdecisiva\b|\bestabelecer\b|\bresolver\b", str(x))))
  df_frame["Declaração"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badmitir\b|\bafirmação\b|\bafirmar\b|\balegação\b|\balegar\b|\bamuar\b|\banunciar\b|\banúncio\b|\barriscar\b|\batestar\b|\bcitar\b|\bcomentar\b|\bcomentário\b|\bcompletar\b|\bcomprovar\b|\bconcessão\b|\bconfessar\b|\bconfirmar\b|\bconfissão\b|\bconjetura\b|\bconjeturar\b|\bcontar\b|\bcontar\b|\bconversa\b|\bconversar\b|\bdeclaração\b|\bdeclarar\b|\bdescrever\b|\bdetalhar\b|\bdizer\b|\besclarecimento\b|\bescrever\b|\bexclamação\b|\bexclamar\b|\bexplicação\b|\bexplicar\b|\bexplicar\b|\bexpressar\b|\bexultar\b|\bfala\b|\bfalar\b|\binsistência\b|\binsistir\b|\bmanter\b|\bmenção\b|\bmencionar\b|\bmensagem\b|\bnegação\b|\bnotar\b|\bobservar\b|\borar\b|\bousar\b|\bpremissa\b|\bprestar\sconta\b|\bproclamação\b|\bproclamar\b|\bprofessar\b|\bpromulgação\b|\bpronunciamento\b|\bpronunciar\b|\bpropor\b|\bproposição\b|\bproposta\b|\breafirmar\b|\breclamar\b|\brefutar\b|\breiterar\b|\brelacionar\b|\brelatar\b|\brelato\b|\brelatório\b|\brepetir\b|\breproduzir\b|\bser\scomo\b|\bsermão\b|\bsorrir\b|\bsugerir\b", str(x))))
  df_frame["Degustar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdegustar\b|\bdeliciar-se\b|\bexperimentar\b|\bprovar\b", str(x))))
  df_frame["Deixado_por_fazer"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdeixado\b|\bdeixar\b|\brestante\b|\brestar\b|\bsobrar\b", str(x))))
  df_frame["Deixar_de_ser"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdesaparecer\b", str(x))))
  df_frame["Delegação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconfederação\b|\bdelegação\b", str(x))))
  df_frame["Delitos"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfraude\b", str(x))))
  df_frame["Desastre_natural"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bavalanche\b|\bciclone\b|\bdesastre\b|\bdesertificação\b|\bmaremoto\b|\bseca\b|\bterremoto\b", str(x))))
  df_frame["Descrição_corporal_holística"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfeminino\b", str(x))))
  df_frame["Descrição_de_duração"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbreve\b|\bcontínuo\b|\bcrônico\b|\bcurto\b|\bduradouro\b|\bdurável\b|\befêmero\b|\bestendido\b|\beternamente\b|\beterno\b|\bfase\b|\binterino\b|\blongo\b|\bmomentâneo\b|\bperpétuo\b|\bpersistente\b|\brápido\b|\bsustentável\b", str(x))))
  df_frame["Descrição_parte_do_corpo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bemagrecer\b|\bgorda\b|\bliso\b", str(x))))
  df_frame["Descrição_químico-sensorial"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcheiro\b|\bcheiroso\b|\bcrocante\b|\bdelicioso\b|\bdoce\b|\bsalgado\b|\btorrada\b", str(x))))
  df_frame["Desejabilidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badmirável\b|\baprovado\b|\barrasar\b|\bbabaca\b|\bbem-cuidado\b|\bbem\b|\bbenigno\b|\bbobo\b|\bbom\b|\bchato\b|\bchato\b|\bcorrupto\b|\bdaora\b|\bdecente\b|\bdeprimente\b|\bdesagradável\b|\bdesejável\b|\bdeslumbrante\b|\bdespojado\b|\bdespreparado\b|\bdigno\b|\bdisponível\b|\bdoce\b|\beclético\b|\beficiente\b|\belitizado\b|\bespetacular\b|\besplêndido\b|\bestupendo\b|\bexcelência\b|\bexcelente\b|\bexcepcional\b|\bexecrável\b|\bextraordinário\b|\bextremo\b|\bexuberante\b|\bfabuloso\b|\bfantástico\b|\bfavorável\b|\bfenomenal\b|\bferrado\b|\bformidável\b|\bhorrível\b|\bidílico\b|\bimundo\b|\bincrível\b|\bindescritível\b|\bIndistinguível\b|\binfeliz\b|\binferior\b|\binútil\b|\binvasivo\b|\birresistível\b|\bjoia\b|\bjulgar\b|\bjusto\b|\blamentável\b|\bleve\b|\blimpo\b|\blixo\b|\bmagnífico\b|\bmaravilha\b|\bmaravilhoso\b|\bmedíocre\b|\bmeia-boca\b|\bmelhor\b|\bmerda\b|\bmetido\b|\bmiserável\b|\bnormal\b|\bnovo\b|\bótimo\b|\bouro\b|\bpatético\b|\bperdido\b|\bperito\b|\bpéssimo\b|\bpior\b|\bpobre\b|\bpodre\b|\bpopular\b|\bporcaria\b|\bprimoroso\b|\brazoável\b|\bruim\b|\bsaudável\b|\bsensacional\b|\bsimples\b|\bsofisticado\b|\bsofrível\b|\bsujo\b|\bsuper\b|\bsupremo\b|\bsurreal\b|\bterrível\b|\btolerável\b|\btremendo\b|\bvelho\b|\bverdadeiramente\b|\bverdadeiro\b|\bviolento\b", str(x))))
  df_frame["Desejar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balmejar\b|\bambição\b|\bambicionar\b|\bambicioso\b|\banseio\b|\bânsia\b|\bansiar\b|\bansioso\b|\baspiração\b|\baspirar\b|\bcobiça\b|\bcobiçar\b|\bdefinhar\b|\bdesejado\b|\bdesejar\b|\bdesejo\b|\bdesejoso\b|\bdeterminação\b|\besperança\b|\besperar\b|\bfenômeno\b|\bimpaciente\b|\bimperativo\b|\bimpulso\b|\binteressado\b|\bluxúria\b|\bprocurar\b|\bquerer\b|\bquerer\b|\brelutante\b|\bsaudade\b|\bsede\b|\bsedento\b|\bvontade\b", str(x))))
  df_frame["Desembarcar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdesembarcação\b|\bdesembarcar\b|\bdesmontar\b|\bpousar\b", str(x))))
  df_frame["Deslocamento_intencional"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baceder\b|\bescalar\b|\bsubir\b", str(x))))
  df_frame["Deslocar-se"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbotecar\b|\bpassar\b|\bpassear\b|\bpasseio\b", str(x))))
  df_frame["Despedaçar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bquebrar\b", str(x))))
  df_frame["Destacar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdescolar\b", str(x))))
  df_frame["Destruir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdestruição\b", str(x))))
  df_frame["Diferenciação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdiferente\b|\bdistinção\b|\bdistinguir\b", str(x))))
  df_frame["Dificuldade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomplexo\b|\bcrítico\b|\bdifícil\b|\bdificuldade\b|\bfácil\b|\bfacilidade\b|\bfacilmente\b|\bimpenetrável\b|\bimpossível\b|\bproblema\b", str(x))))
  df_frame["Dificultar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\batraso\b|\bdemorar\b|\bdificultar\b", str(x))))
  df_frame["Dimensão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baltura\b|\bárea\b|\bcomprimento\b|\bnível\b", str(x))))
  df_frame["Dinamismo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdinâmico\b|\bintensidade\b|\bintenso\b|\bpreguiçoso\b|\bvibrante\b", str(x))))
  df_frame["Dinheiro"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcartão\sde\scrédito\b|\bcartão\b|\bdinheiro\b|\bnota\b", str(x))))
  df_frame["Direção"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badiante\b|\balto\b|\balto\b|\bbaixo\b|\bcaminho\b|\bcima\b|\bdireção\b|\bdireita\b|\besquerda\b|\bfora\b|\bleste\b|\bleste\b|\bnorte\b|\bnorte\b|\boeste\b|\boeste\b|\bpara\scima\b|\bpara\scima\b|\bpara\sfrente\b|\brumo\b|\bsul\b|\bsul\b", str(x))))
  df_frame["Discussão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconferência\b|\bconvenção\b|\bconversa\b|\bdebate\b|\bdiscurso\b|\bpainel\b|\bpalestra\b|\bplenária\b|\breunião\b|\bseminário\b", str(x))))
  df_frame["Discutir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bargumento\b|\blutar\b|\bprotesto\b", str(x))))
  df_frame["Dispersão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdifundido\b|\bdifundir\b|\bdifuso\b|\bdispersão\b|\bdispersar\b|\bdissolver\b|\bdistribuição\b|\bdistribuir\b|\bespalhar\b", str(x))))
  df_frame["Distinção"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baparência\b|\baspecto\b|\bcaracterístico\b|\bdiferenciar\b|\bdistinção\b|\bgarantir\b|\bmarcado\b|\bmarcar\b|\bter\b", str(x))))
  df_frame["Diversidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bamplo\b|\bdiversidade\b|\bdiversificado\b|\bdiverso\b|\bextensão\b|\bheterogeneidade\b|\bheterogêneo\b|\bhomogeneidade\b|\bhomogêneo\b|\blargura\b|\bmistura\b|\bmultifacetada\b|\bmultifacetado\b|\bmultiplicidade\b|\bmúltiplo\b|\bpuro\b|\bsortido\b|\bsortimento\b|\buniforme\b|\buniformidade\b|\bvariabilidade\b|\bvariação\b|\bvariado\b|\bvariedade\b|\bvário\b", str(x))))
  df_frame["Divisão_temporal_do_esporte"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacréscimo\b|\bassalto\b|\bdisputa\sde\spênaltis\b|\bfinal\b|\bgolden\sscore\b|\binício\b|\bintervalo\b|\bprorrogação\b|\bquarto\b|\brodada\b|\brotina\b|\bround\b|\bsérie\b|\bset\b|\btempo\sregulamentar\b|\btempo\b|\btentativa\b|\bvolta\b", str(x))))
  df_frame["Dizer"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bavisar\b|\bcontar\b|\bdesabafar\b|\bdizer\b|\bfalar\b|\bnarrar\b", str(x))))
  df_frame["Documentos"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacordo\b|\bautorização\b|\bcarta\b|\bcomprovante\sde\svacinação\b|\bconcessão\b|\bconfirmação\b|\bcontrato\b|\bcontratual\b|\bconvocação\b|\bcupom\sfiscal\b|\bdecisão\b|\bdeclaração\b|\bdepoimento\b|\bdescoberta\b|\bdiploma\b|\bdireito\b|\bdocumentação\b|\bdocumento\b|\bescritura\b|\bgarantia\b|\bidentificação\b|\bintimação\b|\blei\b|\blicença\b|\bnota\b|\bopinião\b|\bordem\b|\bpapéis\b|\bpassaporte\b|\bpermissão\b|\bsumário\b|\btestamento\b|\btestemunho\b|\btítulo\b|\btratado\b|\bvisto\b", str(x))))
  df_frame["Doença"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcâncer\b|\bdoença\b|\bhérnia\b|\bzika\b", str(x))))
  df_frame["Dominar_situação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdominar\b|\bpredominar\b", str(x))))
  df_frame["Domínio"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barquitetônico\b|\bcientificamente\b|\bcultural\b|\bem\stermos\b|\bhistoricamente\b|\bhistórico\b|\bmusical\b|\bpsicológico\b|\bsocial\b", str(x))))
  df_frame["Dormir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdormir\b|\binconsciente\b|\bsono\b", str(x))))
  df_frame["Duplicação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bclonado\b", str(x))))
  df_frame["Eclipse"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bamortalhado\b|\bamortalhar\b|\bapagar\b|\bblindado\b|\bblindar\b|\bbloquear\b|\bcoberto\b|\bcobrir\b|\beclipse\b|\beclipse\b|\bencoberto\b|\bencobrir\b|\besconder\b|\bescondido\b|\bmascarado\b|\bmascarar\b|\bobscurecer\b|\bobscurecido\b|\bobstruir\b|\boclusão\b|\bocultação\b|\bocultar\b|\bproteger\b|\bprotegido\b|\bvelado\b|\bvelar\b", str(x))))
  df_frame["Economia"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\beconomia\b|\beconômico\b", str(x))))
  df_frame["Educação_ensino"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacadêmico\b|\balfabetização\b|\baluno\b|\baprender\b|\baprendizado\b|\baula\b|\bbacharelado\b|\bcursar\b|\bcurso\b|\bdiplomar\b|\bdisciplina\b|\bdoutorado\b|\beducação\b|\beducacional\b|\beducado\b|\beducar\b|\bensinamento\b|\bensinar\b|\bentender\b|\blecionar\b|\bmagistério\b|\bmatemática\b|\bmestrado\b|\bnormalista\b|\bprofessor\b|\bregistro\b|\buniversitário\b", str(x))))
  df_frame["Eletroeletrônicos"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bar\scondicionado\b|\bfotocopiadora\b|\bmáquina\sde\slavar\b|\bmáquina\b|\bprancha\b", str(x))))
  df_frame["Emergência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bemergência\b", str(x))))
  df_frame["Emitir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bre-emitir\b", str(x))))
  df_frame["Emoção_com_foco_no_experienciador"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babominar\b|\badoração\b|\badorar\b|\badorável\b|\bagradecer\b|\balegre\b|\balegremente\b|\bamar\b|\bamor\b|\bantipatia\b|\bapaixonar\b|\bapiedar\b|\bapreensivo\b|\barrepender\b|\barrependimento\b|\baversão\b|\bboquiaberto\b|\bcalmo\b|\bcarinho\b|\bcarinhosamente\b|\bchateado\b|\bcheio\b|\bcompaixão\b|\bconforto\b|\bconsolação\b|\bdeliciar\b|\bdesconforto\b|\bdesesperado\b|\bdesesperar\b|\bdesespero\b|\bdesgostar\b|\bdesgosto\b|\bdetestar\b|\bempatia\b|\bentusiasmado\b|\bexaltado\b|\bfebril\b|\bfebrilmente\b|\bfelizmente\b|\bfrancamente\b|\bgostar\b|\bhomofobia\b|\bhomofóbico\b|\bimpressionado\b|\binabalado\b|\binfelizmente\b|\binsatisfeito\b|\binteressado\b|\bintimidado\b|\binveja\b|\binvejar\b|\birritado\b|\blamentar\b|\blastimar\b|\blastimar\b|\bmedo\b|\bmenosprezar\b|\bnervoso\b|\bodiar\b|\bódio\b|\bpaciente\b|\bpena\b|\bperturbado\b|\bprantear\b|\bprazer\b|\bpreocupado\b|\bressentimento\b|\bressentir\b|\bsatisfação\b|\bsatisfeito\b|\bsentir\saversão\b|\bsossegar\b|\bsurtar\b|\btemer\b|\btomado\b|\btranquilidade\b|\btranquilo\b", str(x))))
  df_frame["Emoção_direcionada"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babalado\b|\babatido\b|\babatimento\b|\baborrecido\b|\baborrecimento\b|\badmirado\b|\baflição\b|\baflito\b|\bafobado\b|\bagitado\b|\bagonia\b|\bagonizado\b|\balarmado\b|\balegria\b|\bamargura\b|\bamargurado\b|\bambicioso\b|\bamedrontado\b|\bamor\b|\bangústia\b|\bangustiado\b|\bansioso\b|\bantipático\b|\barara\b|\bassutado\b|\batordoado\b|\batormentado\b|\bbem\b|\bbravo\b|\bchateação\b|\bchateado\b|\bchocado\b|\bcondoído\b|\bcontente\b|\bcordialidade\b|\bcurioso\b|\bdecadente\b|\bdecepcionante\b|\bdeleite\b|\bdemolido\b|\bdepressivo\b|\bdesagradável\b|\bdesagrado\b|\bdesanimado\b|\bdesânimo\b|\bdesapontado\b|\bdesapontamento\b|\bdesconcertado\b|\bdesconfiança\b|\bdesconforto\b|\bdesconsolado\b|\bdescontentamento\b|\bdescontraído\b|\bdesencorajado\b|\bdesencorajamento\b|\bdesespero\b|\bdesgastante\b|\bdesgosto\b|\bdesgostoso\b|\bdesolado\b|\bdesorientação\b|\bdesorientado\b|\bdevastado\b|\bdiversão\b|\bdoloroso\b|\bdor\b|\bembaraçado\b|\bembaraço\b|\bemocionado\b|\bempolgado\b|\bencantado\b|\benfurecido\b|\benjoado\b|\bentediado\b|\bentretido\b|\bentristecido\b|\benvergonhado\b|\besmagado\b|\bespanto\b|\bestressado\b|\bestupefação\b|\bestupefato\b|\beuforia\b|\beufórico\b|\bexasperação\b|\bexasperado\b|\bexausto\b|\bexcitação\b|\bexcitado\b|\bextasiado\b|\bfarto\b|\bfascinado\b|\bfelicidade\b|\bfeliz\b|\bferido\b|\bfúria\b|\bfurioso\b|\bgraça\b|\bgratificação\b|\bhorror\b|\bhorrorizado\b|\bhumilhação\b|\bhumilhado\b|\binconsolável\b|\bindignado\b|\binquietação\b|\binquieto\b|\binsípido\b|\binteressar\b|\binteresse\b|\birado\b|\birritação\b|\birritado\b|\bjubiloso\b|\blívido\b|\blúgrube\b|\bluto\b|\bmaravilhado\b|\bmau\b|\bmelancólico\b|\bmiserável\b|\bmistificado\b|\bnervoso\b|\bofendido\b|\bofensa\b|\bperplexidade\b|\bperplexo\b|\bperturbado\b|\bpetrificado\b|\bpreocupação\b|\bpreocupado\b|\bradiante\b|\braiva\b|\brelaxado\b|\brepulsa\b|\bressentido\b|\brevoltado\b|\bsaqueado\b|\bsatisfação\b|\bsatisfeito\b|\bsimpatia\b|\bsimpático\b|\bsimpatizar\b|\bsofrimento\b|\bsombrio\b|\bsurpreendido\b|\bsurpreso\b|\btranstornado\b|\btraumatizado\b|\btriste\b|\btristemente\b|\btristeza\b|\bvexação\b|\bzangado\b", str(x))))
  df_frame["Emoções_de_atividade_mental"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdesfrutar\b|\bdistrair\b|\bdivertir\b", str(x))))
  df_frame["Emoções_por_estímulo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balegria\b|\bconfundir\b|\bdesanimado\b|\bdeslumbrar\b|\bintrigado\b|\bpreocupar\b|\bsurpreender\b", str(x))))
  df_frame["Empregar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdespedido\b|\bempregado\b", str(x))))
  df_frame["Encontrar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdar\sde\scara\b", str(x))))
  df_frame["Encontro_hostil"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbatalha\b|\bbriga\b|\bbrigaiada\b|\bbrigar\b|\bconflito\b|\bconfronto\b|\bdesentendimento\b|\bdiscussão\b|\bdisputa\b|\bguerra\b|\binsultar\b|\bluta\b|\blutar\b|\bmorder\b|\btiro\b|\btumultuar\b|\bxingar\b", str(x))))
  df_frame["Enfatizar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bênfase\b|\bfocar\b|\bfoco\b|\bprestar\b", str(x))))
  df_frame["Enterrar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\benterrado\b|\benterrar\b", str(x))))
  df_frame["Entidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balgo\b|\bcama\b|\bcobertor\b|\bcoisa\b|\bdeus\b|\bentidade\b|\bfigura\b|\bfogão\sà\slenha\b|\bfogão\b|\bindivíduo\b|\bitem\b|\blápis\b|\blençol\b|\bmaterial\b|\bmonstro\b|\bnada\b|\bobjeto\b|\bsofá\b|\btirolesa\b|\btravesseiro\b|\bvasilha\b|\bvela\b", str(x))))
  df_frame["Entidade_biológica"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbacilo\b|\bbactéria\b|\bcoco\b|\bcogumelo\b|\bespirilo\b|\bforma\sde\svida\b|\bhumano\b|\blivre\b|\bmicrorganismo\b|\bmofo\b|\borganismo\b|\bparasita\b|\bprocariota\b|\bunicelular\b|\bvida\b", str(x))))
  df_frame["Entidade_física"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bátomo\b|\bburaco\snegro\b|\bestelar\b|\bestrela\b|\bpartícula\b|\bsol\b", str(x))))
  df_frame["Entregar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bentrega\b|\bentregar\b", str(x))))
  df_frame["Entretenimento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bclube\b|\bentretenimento\b|\bentreter\b", str(x))))
  df_frame["Envelhecimento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bamadurecer\b|\bcrescer\b|\benvelhecer\b|\benvelheimento\b", str(x))))
  df_frame["Enviar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bendereçar\b|\benviar\b|\bmandado\b|\bmandar\b", str(x))))
  df_frame["Equipamentos_esportivos"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baparelho\b|\bapito\b|\barco\b|\bargola\b|\barma\b|\bbandeira\b|\bbarco\b|\bbarra\sfixa\b|\bbarra\b|\bbarras\sassimétricas\b|\bbarras\sparalelas\b|\bbastão\b|\bbicicleta\b|\bbike\b|\bbola\b|\bcaiaque\b|\bcâmera\sdigital\b|\bcaneleira\b|\bcanoa\b|\bcapacete\b|\bcartão\b|\bcavalo\scom\salças\b|\bcavalo\b|\bclipe\snasal\b|\bcoquilha\b|\bcorda\b|\bcotoveleira\b|\bdardo\b|\bdisco\b|\bembarcação\b|\bequipamento\b|\bespada\b|\bfita\b|\bflecha\b|\bflorete\b|\bjoelheira\b|\bmaça\b|\bmartelo\b|\bmáscara\sfacial\b|\bmáscara\b|\bmesa\sde\ssalto\b|\bmesa\b|\bóculos\sde\snatação\b|\bóculos\b|\bpena\b|\bpeso\b|\bpeteca\b|\bpistola\sde\spartida\b|\bpistola\b|\bprancha\b|\bprotetor\sbucal\b|\bprotetor\sde\scabeça\b|\bprotetor\sde\sgarganta\b|\bprotetor\sde\sorelha\b|\bprotetor\sde\souvido\b|\bprotetor\snasal\b|\braquete\b|\bremo\b|\bsabre\b|\bskate\b|\bsolo\b|\btaco\b|\btrampolim\b|\btrave\b|\bvara\b|\bvela\b|\bvolante\b", str(x))))
  df_frame["Escapar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfugir\b", str(x))))
  df_frame["Escolher"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdiscotecagem\b|\beleger\b|\beleição\b|\bescolha\b|\bescolher\b|\boptar\b|\bselecionar\b|\bvotação\b|\bvotar\b", str(x))))
  df_frame["Esconder_objetos"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\besconder\b|\bescondido\b", str(x))))
  df_frame["Escrutínio"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\banalisar\b|\banálise\b|\banalista\b|\banalítico\b|\bbusca\b|\bbuscar\b|\bchecar\b|\bencarar\b|\bescanear\b|\bescrutinar\b|\bescrutínio\b|\bestudar\b|\bestudo\b|\bexaminar\b|\bexplorado\b|\bexplorar\b|\bfolhear\b|\binspeção\b|\binspecionar\b|\binspetor\b|\bintrometer-se\b|\binvestigação\b|\binvestigar\b|\bmonitoração\b|\bmonitorar\b|\bnão\smonitorado\b|\bobservar\b|\bpeneirar\b|\bprocura\b|\bprocurar\b|\breconhecer\b|\breconhecimento\b|\brevisar\b|\brevistar\b|\bsondar\b|\bvarredura\b|\bvarrer\b|\bvasculhar\b|\bver\b|\bverificar\b|\bvigilância\b", str(x))))
  df_frame["Especialidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badepto\b|\badepto\b|\bamador\b|\bamador\b|\bás\b|\bás\b|\bbem\sversado\b|\bbom\b|\bcompetência\b|\bcompetente\b|\bconhecedor\b|\bcraque\b|\bdesqualificado\b|\bespecialista\b|\bespecializado\b|\besplêndido\b|\bestupêndo\b|\bexcelente\b|\bexperiência\b|\bexperiente\b|\bexpert\b|\bfã\b|\bfamiliar\b|\bfantástico\b|\bforte\b|\bfraco\b|\bguru\b|\bhabilidade\b|\bhabilidoso\b|\bhorrível\b|\bignorante\b|\binacreditável\b|\bincompetência\b|\bincompetente\b|\binépcia\b|\binepto\b|\binexperiente\b|\bleigo\b|\bmaestria\b|\bmago\b|\bmaravilhoso\b|\bmediano\b|\bmedíocre\b|\bmestre\b|\bmestre\b|\bnotável\b|\bnovato\b|\bnovo\b|\bótimo\b|\bpró\b|\bproeza\b|\bproficiência\b|\bproficiente\b|\bruim\b|\bsoberbo\b|\bsobressair\b|\bsuperlativo\b|\btécnica\b|\bterrível\b|\btremendo\b|\bversado\b|\bvirtuosidade\b|\bvirtuoso\b", str(x))))
  df_frame["Especificação_individual"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bespecífico\b", str(x))))
  df_frame["Esperar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baguardar\b|\besperar\b", str(x))))
  df_frame["Esportes"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\batletismo\b|\bbadminton\b|\bbaseball\b|\bbasquete\b|\bbasquetebol\b|\bbeisebol\b|\bboxe\b|\bcanoagem\b|\bcaratê\b|\bciclismo\b|\bcrossfit\b|\bescalada\b|\besgrima\b|\besporte\b|\besportivo\b|\besqueite\b|\besqueitismo\b|\bfutebol\b|\bfutsal\b|\bginástica\b|\bgolfe\b|\bhalterofilismo\b|\bhandebol\b|\bhipismo\b|\bhóquei\ssobre\sgrama\b|\bjudô\b|\bkaratê\b|\blevantamento\sde\speso\b|\bluta\solímpica\b|\bnado\ssincronizado\b|\bnatação\b|\bpentatlo\smoderno\b|\bpólo\saquático\b|\bremo\b|\brugbi\b|\brugby\b|\bsalto\sornamental\b|\bskate\b|\bsoftball\b|\bsoftbol\b|\bsurfe\b|\btaekwondo\b|\btênis\sde\smesa\b|\btênis\b|\btiro\scom\sarco\b|\btiro\sesportivo\b|\btriatlo\b|\bvela\b|\bvôlei\sde\spraia\b|\bvôlei\b|\bvoleibol\b", str(x))))
  df_frame["Estado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bestar\b", str(x))))
  df_frame["Estado_continuar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdeixar\b|\bdescansar\b|\bestar\b|\bficar\b|\bmanter\b|\bpermanecer\b|\bprevalecer\b", str(x))))
  df_frame["Estado_da_entidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomplexo\b|\bcondição\b|\bestado\sde\schoque\b|\bestado\sde\sconsciência\b|\bestado\b|\bestar\b", str(x))))
  df_frame["Estágio_de_progresso"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balta\stecnologia\b|\bantigo\b|\bavançado\b|\bbaixa\stecnologia\b|\bcontemporâneo\b|\bde\sponta\b|\bde\súltima\sgeração\b|\bdesenvolvido\b|\bgeração\b|\bmaduro\b|\bmaturidade\b|\bmodernizar\b|\bmoderno\b|\bpróxima\sgeração\b|\bsofisticação\b|\bsofisticado\b|\búltima\sgeração\b", str(x))))
  df_frame["Estar_anexado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\belo\b|\bligado\b|\bponto\sde\sintegração\b|\bsolto\b", str(x))))
  df_frame["Estar_de_acordo_sobre_a_avaliação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconcordar\b", str(x))))
  df_frame["Estar_em_cativeiro"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bpreso\b", str(x))))
  df_frame["Estar_em_risco"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bsegurança\b|\bseguro\b", str(x))))
  df_frame["Estar_em_vigor"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bválido\b", str(x))))
  df_frame["Estar_molhado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmolhado\b", str(x))))
  df_frame["Estar_no_controle"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badministrado\b|\badministrar\b|\bconseguir\b|\bcontrolar\b", str(x))))
  df_frame["Estar_separado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdesligamento\b", str(x))))
  df_frame["Estética"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bamável\b|\bbarroco\b|\bbeleza\b|\bbelo\b|\bbonito\b|\bbucólico\b|\belegante\b|\besportivo\b|\besteticamente\b|\bestiloso\b|\bfeio\b|\bformosura\b|\bfrescura\b|\bhorrendo\b|\blindo\b|\bpitoresco\b|\bplástico\b|\brequintar\b|\brequinte\b|\brústico\b|\bsaboroso\b", str(x))))
  df_frame["Estimar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badivinha\b|\badivinhar\b|\bestimativa\b", str(x))))
  df_frame["Estimular_emoção"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bencantar\b|\birritar\b|\bprazeroso\b|\bsurpresa\b", str(x))))
  df_frame["Estragar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bequivocar\b|\berrar\b", str(x))))
  df_frame["Estudar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcursar\b|\bdiplomar\b|\bestudar\b", str(x))))
  df_frame["Esvaziar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\benxaguar\b|\besponja\b|\blavável\b|\blimpar\b|\blimpeza\b|\bpolido\b|\bsujeira\b", str(x))))
  df_frame["Evento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacontecer\b|\bacontecimento\b|\bassolar\b|\bcongresso\b|\bdesenvolvimento\b|\bepisódio\b|\bevento\b|\bfato\b|\bincidente\b|\bjogo\b|\blotar\b|\bmissa\b|\bocorrer\b|\bprosseguir\b|\bquadro\b|\brealizado\b|\brealizar\b|\bretiro\b|\bser\b|\bshow\b|\bsituação\b|\bsuceder\b", str(x))))
  df_frame["Evento_desejável"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bboa\sideia\b|\bdever\b|\bmá\sideia\b|\bpoder\b", str(x))))
  df_frame["Evento_esportivo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapresentação\b|\bbrasileirão\b|\bcombate\b|\bCopa\sAmérica\b|\bCopa\sdo\sMundo\b|\bCopa\b|\bcorrida\b|\bduelo\b|\bevento\b|\bgame\b|\bjogo\sde\sida\b|\bjogo\sde\svolta\b|\bjogo\sem\scasa\b|\bjogo\sfora\sde\scasa\b|\bjogo\b|\bjogos\solímpicos\b|\bluta\b|\bmundial\b|\bolimpíada\b|\bolímpico\b|\bparaolimpíada\b|\bpartida\sde\sida\b|\bpartida\sde\svolta\b|\bpartida\sem\scasa\b|\bpartida\sfora\sde\scasa\b|\bpartida\b|\bprova\b|\bregata\b|\btemporada\b", str(x))))
  df_frame["Evento_histórico"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmomento\b", str(x))))
  df_frame["Evento_social"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbadalar\b|\bbaile\b|\bbalada\b|\bbanquete\b|\bceia\b|\bcelebração\b|\bcelebrar\b|\bchurrasco\b|\bcomemoração\b|\bconselho\b|\bencontro\b|\bfeira\b|\bfesta\sbeneficente\b|\bfesta\b|\bfestejar\b|\bfestival\b|\bhappy\shour\b|\bjantar\b|\bnoitada\b|\bpiquenique\b|\bpromover\b|\brave\b|\brecepção\b|\breunião\b|\bsamba\b|\bsocial\b|\bvelório\b", str(x))))
  df_frame["Evidências"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbasear\b|\bevidência\b|\bevidenciar\b|\bindicar\b|\bindicativo\b|\bindício\b|\bmanifestar\b|\bpostulado\b|\bprova\b", str(x))))
  df_frame["Evitar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bevitar\b", str(x))))
  df_frame["Exatidão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcerto\b|\bcorreto\b|\bcorrigir\b|\bdireito\b|\berrar\b|\bexato\b|\bpreciso\b", str(x))))
  df_frame["Exemplar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmodelo\b|\bpadrão\b|\bparadigma\b", str(x))))
  df_frame["Exercitar-se"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bexercício\b", str(x))))
  df_frame["Existência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babstrato\b|\bconcreto\b|\bencontrar\b|\bestar\b|\bexistência\b|\bexistente\b|\bexistir\b|\bhaver\b|\bpermanecer\b|\breal\b|\brealidade\b|\bter\b", str(x))))
  df_frame["Existência_circunscrita"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bsurgir\b", str(x))))
  df_frame["Expansão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcrescer\b|\bexpansão\b|\bextensão\b|\binflação\b", str(x))))
  df_frame["Expectativa"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdever\b|\bespera\b|\besperar\b|\bexpectativa\b|\bimprevisibilidade\b|\bsonhar\b", str(x))))
  df_frame["Expectativa_classificada"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapenas\b|\bdimensão\b|\bgeral\b|\binteiro\b|\bmero\b|\btamanho\b|\btodo\b", str(x))))
  df_frame["Experenciar_ferimento_corporal"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barrebentar\b|\bferimento\b|\bfurar\b|\bmachucar\b|\bquebrar\b|\bsangrar\b|\btorcer\b", str(x))))
  df_frame["Experiência_de_percepção"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcheirar\b|\bcompreender\b|\bdelirar\b|\bdelírio\b|\bdetectar\b|\bescutar\b|\bexperiência\b|\bexperimentar\b|\binvisível\b|\bouvir\b|\bperceber\b|\bpercepção\b|\bpesadelo\b|\bsaborear\b|\bsentir\b|\bsonhar\b|\bsonho\b|\btestemunhar\b|\bver\b|\bvivenciar\b", str(x))))
  df_frame["Experimentação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\btratamento\b", str(x))))
  df_frame["Experimentar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bexperimentar\b|\bvivenciar\b", str(x))))
  df_frame["Expressão_facial"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcareta\b|\bsorriso\b", str(x))))
  df_frame["Expressar_publicamente"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bexpressar\b|\bmanifestar\b|\bpassar\b|\bvoz\b", str(x))))
  df_frame["Extensão_linear_de_medidas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bano-luz\b|\bjarda\b|\bkm\b|\bmetro\b|\bmilha\b|\bmilímetro\b|\bpolegada\b|\bquilômetro\b", str(x))))
  df_frame["Fama"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcelebridade\b|\bconhecido\b|\bépico\b|\bestatura\b|\bfama\b|\bfamoso\b|\bfamoso\b|\bfazer\snome\spara\salguém\b|\bgrande\snome\b|\binfame\b|\blendário\b|\bnotoriedade\b|\bnotório\b|\bovelha\snegra\b|\brenomado\b|\brenome\b|\breputação\b", str(x))))
  df_frame["Familiaridade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconhecer\b|\bconhecido\b|\bdesconhecido\b|\bfamiliar\b|\bintimista\b|\bíntimo\b|\bnovo\b", str(x))))
  df_frame["Fase_preliminar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bclassificação\b|\bconquistar\svaga\b|\beliminatórias\b|\bfase\sclassificatória\b|\bfase\sde\sgrupos\b|\bfase\spreliminar\b|\bgrupo\b|\bpreliminares\b|\bvaga\b", str(x))))
  df_frame["Fazedores_de_barulho"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\batabaque\b|\bcandongueiro\b|\bchocalho\b|\bgaita\sde\sfole\b|\btambor\b|\btrombeta\b", str(x))))
  df_frame["Fazer_barulho"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balgazarra\b|\bbarulho\b|\bcanto\b|\bchorar\b|\bgargalhada\b|\bgritar\b|\bguincho\b|\bressoar\b|\brir\b|\bsoluçar\b|\btrovejar\b|\bzoar\b", str(x))))
  df_frame["Fazer_câmbio"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcâmbio\b|\btroca\b|\btrocar\b", str(x))))
  df_frame["Fazer_compras"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcompras\b", str(x))))
  df_frame["Fazer_turismo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacampar\b|\bapreciar\b|\baproveitar\b|\bconhecer\b|\bcurtir\b|\bdesfrutar\b|\bfazer\sturismo\b|\bpaisagem\b|\breceber\b|\btour\b|\bturismo\sferroviário\b|\bturismo\sgastronômico\b|\bturismo\b|\bturístico\b|\bver\b|\bvisita\b|\bvisitação\b|\bvisitar\b|\bvista\b|\bvisual\b", str(x))))
  df_frame["Fechamento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babrir\b|\bfechar\b|\btampar\b", str(x))))
  df_frame["Fechamento_de_locais"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfechar\b", str(x))))
  df_frame["Fenômenos_naturais"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bamanhecer\b|\bamanhecer\b", str(x))))
  df_frame["Final"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconquistar\b|\bentregar\b|\bfinal\b|\bganhar\b|\bperder\b|\btítulo\b|\bvencer\b", str(x))))
  df_frame["Finalidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balvo\b|\bde\smodo\sa\b|\bde\b|\bdeterminado\b|\bfinalidade\b|\bintenção\b|\bintuito\b|\bmotivo\b|\bobjetivo\b|\bobjeto\b|\bpara\sque\b|\bpara\b|\bplanejar\b|\bplano\b|\bpra\b|\bpretender\b|\bpretendido\b|\bpropósito\b|\bproposta\b|\bresolvido\b|\broteiro\b|\buso\b|\bvisar\b", str(x))))
  df_frame["Finalidade_do_utensílio"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfunção\b|\brecomendar\b|\buso\b", str(x))))
  df_frame["Financiamento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfundar\b", str(x))))
  df_frame["Fingir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcavar\b|\bfingir\b|\bsimular\b", str(x))))
  df_frame["Foco_de_estímulo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babominável\b|\baconchegante\b|\bagonizante\b|\bagradável\b|\bagravação\b|\bagravante\b|\balarmante\b|\balucinante\b|\bameno\b|\bangustiante\b|\banimado\b|\banimador\b|\bapaixonante\b|\bapaziguador\b|\bapetitoso\b|\baprazível\b|\bapreciável\b|\bapresentável\b|\barrebatador\b|\barrepiante\b|\barrepio\b|\bassustador\b|\baterrorizante\b|\batormentador\b|\bbacana\b|\bbem-humorado\b|\bcalmante\b|\bcansativo\b|\bcativante\b|\bcharmoso\b|\bchato\b|\bcheio\b|\bchocante\b|\bcômico\b|\bcomodidade\b|\bcomovente\b|\bconfortante\b|\bconfortável\b|\bconfuso\b|\bconsolador\b|\bconstrangedor\b|\bdelícia\b|\bdelicioso\b|\bdepressivo\b|\bdesagradável\b|\bdesapontador\b|\bdesbaratado\b|\bdescanso\b|\bdesconcertante\b|\bdesconfortável\b|\bdesencorajador\b|\bdesmotivante\b|\bdesorientante\b|\bdevastador\b|\bdivertido\b|\beletrizante\b|\bemocionante\b|\bempolgante\b|\bencantador\b|\bencorajador\b|\benfadonho\b|\benfurecedor\b|\bengraçado\b|\benlouquecedor\b|\bentristecedor\b|\benvolvente\b|\bespantoso\b|\bestimulante\b|\bestremecedor\b|\bestressante\b|\bestupeficante\b|\bexasperador\b|\bfascinante\b|\bformidável\b|\bfrio\b|\bglamour\b|\bgostoso\b|\bgratificante\b|\bhilário\b|\bhumilhante\b|\bimpressionante\b|\bincitador\b|\bincômodo\b|\bincrível\b|\binquietante\b|\binsatisfatório\b|\binsultante\b|\bintimidador\b|\bintrigante\b|\birritação\b|\birritante\b|\birritante\b|\blamentável\b|\blegal\b|\bmarcante\b|\bmistificante\b|\bmonótono\b|\bmortificante\b|\bnojeira\b|\bnojento\b|\bofensivo\b|\bpacificador\b|\bpatético\b|\bperturbador\b|\bperturbar\b|\bpreocupante\b|\bproblemático\b|\bproveito\b|\bquerido\b|\brecreação\b|\brelaxamento\b|\brelaxante\b|\brelaxar\b|\brepugnante\b|\brepulsivo\b|\brevigorante\b|\brevoltante\b|\brico\b|\bsatisfatório\b|\bsério\b|\bsinistro\b|\bsolene\b|\bsuculento\b|\bsurpreendente\b|\bsuspense\b|\btedioso\b|\bterrível\b|\btocante\b|\btranquilizador\b|\btraumático\b|\btraumatizante\b|\btriste\b|\bvazio\b", str(x))))
  df_frame["Formar_relações"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bazaração\b|\bboda\b|\bcasar\b|\bnamorar\b|\bperto\b|\bseparar\b|\bunir\b", str(x))))
  df_frame["Formas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bforma\b|\bformar\b|\binclinado\b|\bíngreme\b|\blinha\b|\bperfil\b|\bredondo\b", str(x))))
  df_frame["Fornecimento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfornecer\b|\bproporcionar\b|\bservido\b|\bservir\b", str(x))))
  df_frame["Fracasso_de_empreendimento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfalir\b", str(x))))
  df_frame["Frequência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bagora\b|\banual\b|\banualmente\b|\bàs\svezes\b|\bbianual\b|\bbimestral\b|\bcomum\b|\bconstantemente\b|\bcotidiano\b|\bcotidiano\b|\bde\stempos\sem\stempos\b|\bde\svez\sem\squando\b|\bdesta\svez\b|\bdiariamente\b|\bdiário\b|\bdiário\b|\besporádico\b|\bfrequência\b|\bfrequente\b|\bfrequentemente\b|\bgeralmente\b|\binfrequente\b|\binfrequentemente\b|\bintermintente\b|\bintervalo\b|\bmensalmente\b|\bnormal\b|\bnormalmente\b|\bnoturno\b|\bnunca\smais\b|\bnunca\b|\bo\stempo\stodo\b|\bocasional\b|\bocasionalmente\b|\bordináriamente\b|\bperiódico\b|\bperíodo\b|\bquinzenalmente\b|\bquotidiano\b|\bquotidiano\b|\braramente\b|\braro\b|\brecorrência\b|\brecorrente\b|\bregular\b|\bregularmente\b|\brepetir\b|\bsemanalmente\b|\bsemestre\b|\bsempre\b|\bsomente\b", str(x))))
  df_frame["Frugalidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdesperdiçar\b", str(x))))
  df_frame["Função"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bservir\b", str(x))))
  df_frame["Ganhar_um_prêmio"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bvitória\b", str(x))))
  df_frame["Ganhos_e_perdas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcusto-benefício\b|\bganhar\b|\brender\b", str(x))))
  df_frame["Grau"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babsolutamente\b|\bdeveras\b|\bem\sparte\b|\benorme\b|\bestupidamente\b|\bextremamente\b|\bextremo\b|\bgrande\b|\bligeiramente\b|\bmais\b|\bmenos\b|\bmuito\b|\brealmente\b|\btanto\b|\btão\b|\btotalmente\b", str(x))))
  df_frame["História"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bhistória\b", str(x))))
  df_frame["Hospedar-se"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bficar\b|\bhospedar\b", str(x))))
  df_frame["Hospital"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bhospital\b", str(x))))
  df_frame["Hospitalidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacolhedor\b", str(x))))
  df_frame["Idade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badolescência\b|\badulto\b|\bantigo\b|\bcom\b|\bde\b|\bidade\b|\binfância\b|\binfantil\b|\bjovem\b|\bmaduro\b|\bmeninice\b|\bnovo\b|\bter\b|\bvelhice\b|\bvelho\b", str(x))))
  df_frame["Identidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bidentidade\b", str(x))))
  df_frame["Idiossincrasia"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bpeculiar\b|\bpessoal\b|\bprivativo\b|\búnico\b", str(x))))
  df_frame["Impacto"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcolidir\b|\bpaulada\b|\bporrada\b", str(x))))
  df_frame["Impedir_ou_permitir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baprovar\b|\bdar-se\sao\sluxo\b|\bdeixar\b|\binadimissível\b|\binviabilizar\b|\bpermitir\b", str(x))))
  df_frame["Importância"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcentral\b|\bconhecido\b|\bcrítico\b|\bdominar\b|\bgravemente\b|\bimperdível\b|\bimportância\b|\bimportante\b|\bmarco\b|\bprimário\b|\bprincipal\b|\bprivilegiar\b|\bqualificar\b|\bsecundário\b|\bselo\b|\bsimbolo\b", str(x))))
  df_frame["Impor_obrigação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bexigir\b|\bobrigar\b", str(x))))
  df_frame["Impressão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baparência\b|\bimagem\b|\bimpressionar\b", str(x))))
  df_frame["Impulso_biológico"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfaminto\b|\bfome\b", str(x))))
  df_frame["Inclinação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bvocação\b", str(x))))
  df_frame["Inclusão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babranger\b|\bagrupar\b|\baté\b|\bcom\b|\bcontar\b|\bconter\b|\benglobar\b|\benvolver\b|\bincluir\b|\bincorporar\b|\bjuntar\b|\bmisturar\b|\bpossuir\b|\breunir\b", str(x))))
  df_frame["Incremento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balém\sde\b|\bmais\b|\boutro\b|\bsomar\b", str(x))))
  df_frame["Indicar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacusar\b", str(x))))
  df_frame["Inefabilidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmagia\b|\bmágica\b|\bmágico\b", str(x))))
  df_frame["Influência_objetiva"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bafetar\b|\befeito\b|\bimpactar\b|\bimpacto\b|\binfluência\b|\binfluenciar\b|\bpoder\b|\bprejudicar\b|\bprejuízo\b|\bprocurar\b", str(x))))
  df_frame["Influência_subjetiva"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconvidativo\b|\bdesestimular\b|\bembriagado\b|\binfluenciar\b|\binspiração\b|\binspirador\b|\binspirar\b|\bmusa\b|\btrazer\b|\bvaler\sa\spena\b", str(x))))
  df_frame["Informação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdado\b|\bdados\b|\bdica\b|\binformação\b|\binformar\b|\bnoticiar\b", str(x))))
  df_frame["Informação_atribuída"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bde\sacordo\scom\b|\bsegundo\b", str(x))))
  df_frame["Informação_não_atribuída"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bsupostamente\b", str(x))))
  df_frame["Infrações"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfalha\b|\bfalta\b|\binfração\b|\bmarcar\sfalta\b", str(x))))
  df_frame["Infrações_diretas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcarrinho\b|\bderrubar\b|\bentrada\b|\bsplashing\b", str(x))))
  df_frame["Infrações_indiretas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcarregada\b|\bcarregar\b|\bcavar\b|\bcondução\b|\bconduzir\b|\bdois\stoques\b|\bdupla\sfalta\b|\bfalta\sde\spé\b|\bimpedimento\b|\binvadir\b|\binvasão\b|\bjogo\sperigoso\b|\bmão\b|\bqueimar\sa\slargada\b|\bqueimar\b|\bsimulação\b|\bsimular\b", str(x))))
  df_frame["Infraestrutura"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbase\b|\binfraestrutura\b", str(x))))
  df_frame["Ingestão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balimentação\b|\balimentar\b|\balmoçar\b|\balmoço\b|\bbeber\b|\bbrocar\b|\bcomer\b|\bcomida\b|\bconsumir\b|\bjantar\b|\blanchar\b|\blanche\b|\bpetiscar\b|\btomar\b", str(x))))
  df_frame["Ingredientes"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babacaxi\b|\baçaí\b|\baçúcar\sde\sconfeiteiro\b|\baçúcar\b|\bágua\b|\baguardente\b|\baipim\b|\bálcool\b|\balho\b|\banchova\b|\barroz\b|\bazeite\sde\sdendê\b|\bazeite\sde\soliva\b|\bazeite\b|\bbacalhau\b|\bbacon\b|\bbacuri\b|\bbadejo\b|\bbanana-da-terra\b|\bbanana\b|\bbanha\sde\sporco\b|\bbatata-baroa\b|\bbatata\b|\bbife\b|\bburiti\b|\bcação\b|\bcacau\b|\bcachaça\b|\bcafé\b|\bcajá\b|\bcaju\b|\bcaldo\sde\scarne\b|\bcamarão\b|\bcana-de-açúcar\b|\bcana\b|\bcanela\b|\bcapivara\b|\bcaranguejo\b|\bcarne-seca\b|\bcarne\b|\bcarneiro\b|\bcatupiry\b|\bcavaquinha\b|\bcebola\b|\bcereal\b|\bcerveja\b|\bchantili\b|\bchantilly\b|\bcharque\b|\bcheddar\b|\bchocolate\sem\spó\b|\bchocolate\sgranulado\b|\bchocolate\b|\bchuchu\b|\bcoalhada\b|\bcoco\b|\bcoentro\b|\bcontra-filé\b|\bcostela\b|\bcravo\b|\bcrustáceo\b|\bcupuaçu\b|\bdendê\b|\bdoce\sde\sleite\b|\berva-mate\b|\bfarinha\sde\smandioca\b|\bfarinha\b|\bfécula\b|\bfeijão\b|\bfermento\b|\bfilé\b|\bfrango\b|\bfruta\b|\bfruto\b|\bgalinha\b|\bgorgonzola\b|\bguaraná\b|\bhortelã\b|\bingrediente\b|\biogurte\b|\bjaca\b|\bjambu\b|\bjavali\b|\bjoelho\sde\sporco\b|\bketchup\b|\blagarto\b|\blagosta\b|\blagostim\b|\blegume\b|\bleite\scondensado\b|\bleite\b|\blinguiça\scalabresa\b|\blinguiça\b|\blombo\b|\bmacaxeira-brava\b|\bmacaxeira\b|\bmaionese\b|\bmandioca-brava\b|\bmandioca\b|\bmanga\b|\bmangaba\b|\bmaniva\b|\bmanteiga\b|\bmarisco\b|\bmassa\b|\bmel\b|\bmilho\b|\bmoranga\b|\bmorango\b|\bmozzarela\b|\bmurici\b|\bnoz\b|\bnutella\b|\bóleo\b|\bora-pro-nóbis\b|\bovo\b|\bpaçoca\b|\bpacu\b|\bpaio\b|\bpão\b|\bpeito\sde\sfrango\b|\bpeixe\b|\bpequi\b|\bpernil\b|\bperu\b|\bpicanha\b|\bpimenta\b|\bpinhão\b|\bpiranha\b|\bpirarucu\b|\bpolvilho\b|\bqueijo\b|\bquiabo\b|\bquirera\b|\brepolho\b|\bsal\b|\bsalmão\b|\bsalsicha\b|\bsalsichão\b|\bsapoti\b|\bsardinha\b|\bshitake\b|\bsobrecoxa\b|\bsteak\b|\btapioca\b|\btempero\b|\btomate\b|\btorresmo\b|\btortelli\b|\btucumã\b|\btucunaré\b|\btucupi\b|\bumbu\b|\bvegetal\b|\bvinho\b|\bwasabi\b|\bwurst\b", str(x))))
  df_frame["Instalações_esportivas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bárea\spara\scanoagem\b|\barena\b|\bcampo\sde\satletismo\b|\bcampo\sde\sbeisebol\b|\bcampo\sde\sfutebol\b|\bcampo\sde\sgolfe\b|\bcampo\sde\shóquei\b|\bcampo\sde\srúgbi\b|\bcampo\spara\sequitação\b|\bcampo\b|\bcentro\saquático\b|\bcentro\sde\sginástica\solímpica\b|\bcircuito\b|\bestádio\sde\sfutebol\b|\bestádio\b|\bginásio\spoliesportivo\b|\bginásio\b|\binstalação\b|\blagoa\b|\bmar\b|\bpavilhão\b|\bpista\sde\satletismo\b|\bpista\sde\sciclismo\b|\bpista\b|\bpraia\b|\bquadra\sde\sbadminton\b|\bquadra\sde\sbasquete\b|\bquadra\sde\shandebol\b|\bquadra\sde\stênis\b|\bquadra\sde\svôlei\b|\bquadra\b|\brua\b|\bsambódromo\b|\bvelódromo\b", str(x))))
  df_frame["Instância"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomo\b|\bexemplo\b", str(x))))
  df_frame["Instância_de_evento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bciclo\b|\bde\snovo\b|\bfase\b|\bnovamente\b|\bocasião\b|\brepetido\b|\buma\svez\b|\bvez\b", str(x))))
  df_frame["Instância_única"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcada\b|\bsimplesmente\b|\bsó\b|\búnico\b", str(x))))
  df_frame["Instituições"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\binstituição\b", str(x))))
  df_frame["Intérpretes_e_papéis"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapresentação\b|\bapresentar\b|\bassistir\b|\batuar\b|\bbrincar\b|\bensaiar\b|\bespetáculo\b|\besquete\b|\bestrela\b|\bestrelar\b|\bfazer\b|\bfilme\b|\bpalco\b|\bpapel\b|\bpeça\b|\bprotagonizar\b|\bser\b|\bteatro\b|\btreinar\b", str(x))))
  df_frame["Intervenção_médica"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapresentar\b|\bexame\b|\bmedicar\b|\breceitar\b|\bremédio\b|\btraqueotomia\b|\bvítima\b", str(x))))
  df_frame["Jogadas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bestilo\b|\bjogada\b|\bjogar\b|\blance\b|\bmanobra\b|\btécnica\b", str(x))))
  df_frame["Jogadas_individuais"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacertar\b|\bafundar\b|\bagachamento\b|\bagachar\b|\bagarramento\b|\bagarrar\b|\balinhamento\b|\bamorti\b|\bapproach\b|\baproveitar\srebote\b|\baproximação\b|\barranque\b|\barremessar\b|\barremesso\b|\batacar\b|\bataque\b|\batirar\b|\bavançar\b|\bavanço\b|\bback\sswing\b|\bbackhand\sclear\b|\bbackhand\b|\bbate-pronto\b|\bbater\b|\bbatida\b|\bbicicleta\b|\bboggey\b|\bborboleta\b|\bbraçada\b|\bcabeceada\b|\bcabecear\b|\bcabeceio\b|\bcaminhar\b|\bchina\b|\bchop\b|\bchutar\b|\bchute\b|\bcobrança\b|\bcobrar\b|\bconcha\b|\bcorrer\b|\bcorrida\b|\bcortada\b|\bcortar\b|\bcostas\b|\bcrawl\b|\bcrol\b|\bcruzada\b|\bcruzar\b|\bdeixadinha\b|\bdisparar\b|\bdouble\sboggey\b|\bdrive\b|\bdrop\sgoal\b|\bdrop\sshot\b|\bdrop\b|\beagle\b|\bempurrão\b|\berguer\b|\bescalar\b|\bescanteio\b|\bespalmar\b|\bestilo\slivre\b|\bflick\b|\bforehand\b|\bfresh\sair\b|\bfuga\b|\bgirar\b|\bgiro\b|\blançamento\b|\blançar\b|\blance\slivre\b|\blance-livre\b|\blateral\b|\blevantamento\b|\blevantar\b|\blineout\b|\blivre\b|\bmarco\b|\bmedley\b|\bmeio\spasso\b|\bnadar\b|\bnado\slivre\b|\bnado\b|\bobstrução\b|\bpancada\sleve\b|\bparalela\b|\bpassada\b|\bpegar\srebote\b|\bpegar\b|\bpeito\b|\bpeixinho\b|\bpênalti\b|\bpenalty\sgoal\b|\bpernada\b|\bpiaffe\b|\bpontapé\sde\spenalidade\b|\bpontapé\sde\sressalto\b|\bpontapé\b|\bprogressão\b|\bpular\b|\bpulo\b|\bpush\sand\spump\b|\bpush-hit\b|\bquicar\b|\bquique\b|\brebote\b|\bremada\b|\bremar\b|\brolamento\b|\brolar\b|\bsacar\b|\bsaltar\b|\bsalto\stesoura\b|\bsalto\b|\bsaque\b|\bsegurar\b|\bserviço\b|\bservir\b|\bshot\b|\bsmash\b|\bsoltar\b|\bsprint\b|\bswing\b|\btacada\b|\btacar\b|\btesoura\b|\btiro\sde\scanto\b|\btiro\sde\sgol\b|\btiro\sde\smeta\b|\btiro\slivre\b|\btocar\b|\btopspin\b|\btoque\b|\bv\b|\bvelejar\b|\bvoleio\b", str(x))))
  df_frame["Jogadas_interativas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bagarramento\b|\bagarrar\b|\barremessar\b|\barremesso\b|\batacar\b|\bataque\b|\bbater\b|\bblock\spass\b|\bblock\b|\bbloquear\b|\bbloqueio\b|\bbola\salta\b|\bcarretilha\b|\bchapéu\b|\bchutar\b|\bchute\b|\bclear\b|\bclinche\b|\bcombinar\b|\bcontra-atacar\b|\bcontra-ataque\b|\bcruzado\b|\bcruzamento\b|\bcruzar\b|\bdefender\b|\bdefesa\b|\bdefletir\b|\bdeflexão\b|\bderrubada\b|\bderrubar\b|\bdevolução\b|\bdevolver\b|\bdireto\b|\bdriblar\b|\bdrible\sda\svaca\b|\bdrible\b|\berguer\b|\bescalão\b|\besquiva\b|\besquivar\b|\bestabilização\b|\bestrangulamento\b|\bfinta\b|\bgancho\b|\bgolpe\b|\bgolpear\b|\bimobilização\b|\bimobilizar\b|\binterceptação\b|\binterceptar\b|\bjab\b|\bknockdown\b|\blambreta\b|\blançamento\b|\blançar\b|\blençol\b|\bleque\b|\blevantamento\b|\blevantar\b|\blivrar\b|\blob\b|\blutar\b|\bmarcação\b|\bmarcar\b|\bmaul\b|\bmeia-lua\b|\bparada\b|\bpassagem\sdo\sbastão\b|\bpassagem\b|\bpassar\b|\bpasse\smolhado\b|\bpasse\sseco\b|\bpasse\b|\bpontapé\b|\bpressionar\b|\bqueda\b|\breceber\b|\brecepção\b|\broubo\sde\sbola\b|\bruck\b|\bsocar\b|\bsoco\b|\bswing\b|\btabela\b|\btabelar\b|\btackle\b|\btocar\b|\btoco\b|\btoque\b|\btroca\b|\btrocar\b|\bultrapassar\b|\buppercut\b", str(x))))
  df_frame["Jogadas_pontuadas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babertura\b|\babrir\smarcador\b|\babrir\splacar\b|\bace\b|\bacertar\b|\badolph\b|\balbatross\b|\bampliar\b|\barco\b|\barremesso\b|\bassistência\b|\bback\shalf\stwist\b|\bback\sthree\squarter\b|\bback\b|\bbalançar\b|\bbalanço\b|\bball\sout\b|\bbandeja\b|\bbarani\sout\b|\bbarani\b|\bbirdie\b|\bbombeiro\b|\bbreak-point\b|\bcan\scan\b|\bcarpado\b|\bcesta\b|\bchave\b|\bcody\b|\bcompletar\b|\bcompulsory\b|\bconcluir\b|\bconclusão\b|\bconner\sspin\b|\bconverter\b|\bcravada\b|\bcravar\b|\bcruzado\b|\bdecolagem\b|\bdiamidov\b|\bdireto\b|\bdouble\sback\b|\bdouble\sfull\b|\bdouble\smini\stramp\b|\bduplo\stwist\scarpado\b|\bduplo-duplo\b|\bempunhaduras\b|\benterrada\b|\benterrar\b|\bequilíbrio\b|\bespacate\b|\bespacato\b|\bespargata\b|\bestabilização\b|\bestendida\b|\besticada\b|\bfinalização\b|\bfinalizar\b|\bflic-flac\b|\bfliffis\b|\bflutuador\b|\bfront\sfull\b|\bfront\sthree\squarter\b|\bfront\b|\bfull\b|\bgame\spoint\b|\bgirar\b|\bgiro\sgigante\b|\bgiro\b|\bgol\scontra\b|\bgol\solímpico\b|\bgol\b|\bgolden\sscore\b|\bgrupado\b|\bguindaste\b|\bgut\swrench\b|\bhalf\sin\shalf\sout\b|\bhalf\snelson\b|\bhalf\b|\bhandspring\b|\bhole\sin\sone\b|\bhypolito\strês\b|\bin\b|\bippon\b|\bjanz\b|\bkoka\b|\bkorbut\b|\blargada\b|\blargar\b|\bmão\saberta\b|\bmarcar\sgol\b|\bmarcar\b|\bmatch\spoint\b|\bmidle\b|\bmiller\b|\bmoinho\b|\bmortal\b|\bmorte\ssúbita\b|\bnocaute\b|\bonda\b|\bout\b|\bparada\sde\smãos\b|\bparada\b|\bparar\b|\bpegada\b|\bpegar\b|\bpike\b|\bpirueta\b|\bpivot\b|\bpivote\b|\bponte\saérea\b|\bponto\b|\bpontuação\b|\bpullover\b|\brandolph\b|\brandy\b|\bretomada\b|\bretomar\b|\brolê\b|\bround-off\b|\brudolph\b|\brudy\sout\b|\brudy\b|\bsaída\b|\bsaltar\b|\bsalto\spak\b|\bsalto\b|\bset\spoint\b|\bside\b|\bstützkehre\b|\bsuple\b|\bsuplê\b|\btakedown\b|\btkachev\b|\btocar\b|\btoque\b|\btriffis\b|\btriple\sback\b|\btriplo-duplo\b|\btuck\b|\bvertical\b|\bvéu\b|\bvoar\b|\bvoluntary\b|\bvoo\b|\bwazari\b|\bwhipback\b|\bwipe-out\b|\byuko\b", str(x))))
  df_frame["Julgamento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badmirar\b|\bapaixonado\b|\bdelicioso\b|\berrar\b|\bestigmatizar\b|\bhonesto\b|\bicônico\b|\bimpecável\b|\brespeito\b|\bvalioso\b|\bvalorizar\b", str(x))))
  df_frame["Julgamento_de_intensidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bforte\b", str(x))))
  df_frame["Legalidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcertificado\b|\bdireito\b|\blegal\b", str(x))))
  df_frame["Lembrar_experiência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\besquecer\b|\binesquecível\b|\blembrança\b|\blembrar\b|\bmemória\b", str(x))))
  df_frame["Ler"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bleitor\b|\bleitura\b|\bler\b", str(x))))
  df_frame["Levar_tempo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bágil\b|\bdevagar\b|\bdevagarzinho\b|\bem\b|\bgradualmente\b|\blentamente\b|\blento\b|\blevar\b|\bligeiramente\b|\bprestatividade\b|\bpresteza\b|\brapidamente\b|\brápido\b", str(x))))
  df_frame["Level_of_force_exertion"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bforça\b|\bforte\b|\bimpotente\b|\bpoderoso\b|\bpotência\b|\bsuave\b", str(x))))
  df_frame["Level_of_force_resistance"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdureza\b|\bduro\b|\belástico\b|\bmais\b|\bresistente\b|\bsensível\b", str(x))))
  df_frame["Libertar_prisioneiro"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\blibertar\b", str(x))))
  df_frame["Licença_temportária"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bférias\b", str(x))))
  df_frame["Liderança"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badministrar\b|\bcapitão\b|\bgovernante\b|\blíder\b|\bliderado\b|\bprincesa\b|\breger\b|\brei\b", str(x))))
  df_frame["Limitação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbarreira\b", str(x))))
  df_frame["Limiting"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapenas\b|\blimitação\b|\blimitar\b|\bsó\b", str(x))))
  df_frame["Locais_naturais"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bar\slivre\b|\barquipélago\b|\barrecife\b|\bbacia\b|\bbaía\b|\bbalnear\b|\bbalneário\b|\bbarra\b|\bbarragem\b|\bbeleza\snatural\b|\bbosque\b|\bcachoeira\b|\bcampo\b|\bcanal\b|\bcascata\b|\bcatarata\b|\bcaudal\b|\bcaverna\b|\bchapada\b|\bcordilheira\b|\bcórrego\b|\bdeserto\b|\bduna\b|\benseada\b|\bestreito\b|\bfloresta\b|\bgaláxia\b|\bgruta\b|\bhidrotermal\b|\bilha\b|\bjardim\b|\blago\b|\blagoa\b|\blençol\b|\bmangue\b|\bmar\b|\bmargem\b|\bmata\b|\bmirante\b|\bmontanha\b|\bmontão\b|\bmonte\b|\bmorro\b|\bmundo\b|\bnatural\b|\bnatureza\b|\boceano\b|\borla\b|\bpantanal\b|\bparadisíaco\b|\bparque\secológico\b|\bparque\smunicipal\b|\bparque\snacional\b|\bparque\b|\bpasto\b|\bpenínsula\b|\bpico\sde\smontanha\b|\bpiscina\snatural\b|\bponto\spanorâmico\b|\bpraia\b|\bqueda\sd\ságua\b|\bqueda\sde\ságua\b|\brecife\b|\breserva\snatural\b|\breserva\b|\briacho\b|\bribeira\b|\bribeirão\b|\brio\b|\bsertão\b|\btrilha\sde\scaminhada\b|\bvale\b", str(x))))
  df_frame["Locais_políticos"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baldeia\b|\barquidiocese\b|\bbairro\b|\bcapital\b|\bcidade\b|\bcongresso\b|\bcontinente\b|\bdiocese\b|\bdistrito\b|\bestado\b|\beuropa\b|\bexterior\b|\bfavela\b|\bgoverno\b|\binternacionalmente\b|\bmetrópole\b|\bmundo\b|\bmunicipal\b|\bmunicípio\b|\bpaís\b|\bparóquia\b|\bplanalto\b|\bpovoado\b|\bprincipado\b|\btaba\b|\bterra\b|\bvila\b|\bvilarejo\b", str(x))))
  df_frame["Locais_por_colocação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\blocalização\b|\bposição\b", str(x))))
  df_frame["Locais_por_entidade_características"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbairro\b|\bcinturão\b|\benclave\b", str(x))))
  df_frame["Locais_por_evento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcampo\sde\sbatalha\b|\bcampo\b|\bcena\b|\bcenário\b|\bespaço\b|\blocal\b|\bpicadeiro\b|\bteatro \b", str(x))))
  df_frame["Locais_por_propriedade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bpropriedade\b|\bterreno\b", str(x))))
  df_frame["Locais_por_uso"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bárea\sde\srecreação\b|\bárea\sindustrial\b|\bassociação\ssocial\b|\bassociação\b|\bbar\b|\bcadeia\b|\bcanto\sdo\ssilêncio\b|\bcárcere\b|\bcasa\sde\sshow\b|\bcemitério\b|\bcentro\seducacional\b|\bchafariz\b|\bcidade\sbase\b|\bcidade\ssede\b|\bcomplexo\b|\bescola\sde\sartes\b|\bescola\sde\sbalé\b|\bescola\sde\smúsica\b|\bescola\stécnica\b|\bescola\b|\bfaculdade\sde\sdireito\b|\bfaculdade\sde\sodontologia\b|\bfaculdade\b|\bfazenda\b|\bfundação\b|\bigreja\b|\bindústria\b|\binstituição\sde\sensino\b|\binstituição\seducacional\b|\binstituição\b|\binterior\b|\bmarco\shistórico\b|\bmeca\b|\bmonumento\b|\borganização\sde\sproteção\sdos\sanimais\b|\borganização\sde\sserviço\ssocial\b|\borganização\ssem\sfins\slucrativos\b|\borganização\b|\bporto\b|\bpraça\b|\bprisão\b|\bpub\b|\bquarto\b|\bquintal\b|\bsantuário\b|\bsede\b|\bseminário\b|\bsindicato\b|\buniversidade\sparticular\b|\buniversidade\b|\bUTI\b", str(x))))
  df_frame["Local"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bambiente\b|\bárea\b|\bcentral\b|\bcentro\sda\scidade\b|\bcentro\b|\bespaço\b|\blocal\b|\blocalidade\b|\blocalização\b|\blugar\b|\bmancha\b|\bnúcleo\b|\bperiferia\b|\bplaneta\b|\bponto\b|\bregião\b|\bregional\b|\bsuperfície\b|\bTerra\b|\bterreno\b|\bterritório\b|\burbano\b|\bzona\b", str(x))))
  df_frame["Localização_da_luz"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacender\b|\bbrilhante\b|\bbrilhar\b|\bbrilho\spálido\b|\bbrilho\b|\bcentelha\b|\bchamejar\b|\bcintilação\b|\bcintilante\b|\bcintilar\b|\bclaro\b|\bcoruscação\b|\bcoruscar\b|\besplendor\b|\bflamejar\b|\bflash\b|\biluminado\b|\biluminar\b|\bluminosidade\b|\bluminoso\b|\blustroso\b|\bluz\b|\bpiscante\b|\bpiscar\b|\brefulgência\b|\brefulgente\b|\brefulgir\b|\breluzir\b|\bresplandecente\b|\bresplandecer\b|\bresplendor\b|\bsolar\b|\bvislumbrar\b|\bvislumbre\b", str(x))))
  df_frame["Localização_esperada_da_pessoa"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcasa\b", str(x))))
  df_frame["Localização_na_trajetória"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bpassar\b", str(x))))
  df_frame["Localização_no_tempo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bano\b|\bdia\b|\bem\b|\bhora\b|\btempo\b", str(x))))
  df_frame["Localizar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bachar\b|\bencontrar\b", str(x))))
  df_frame["Louvabilidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bhonra\b", str(x))))
  df_frame["Malfeitoria"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bpecar\b", str(x))))
  df_frame["Maneira"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baltamente\b|\bapaixonadamente\b|\batravés\sde\b|\batravés\b|\bauditivamente\b|\bcinestesicamente\b|\bcomo\b|\bconforme\b|\bcuriosamente\b|\bde\sum\sjeito\b|\bde\sverdade\b|\bdiretamente\b|\bdireto\b|\bincontrolavelmente\b|\bintencionalmente\b|\bjeito\b|\blevemente\b|\bliteralmente\b|\bmaneira\b|\bmaravilhosamente\b|\bmedida\b|\bnormalmente\b|\bobsessivamente\b|\bpoeticamente\b|\bprofundamente\b|\bprogressivo\b|\bradicalmente\b|\btranquilamente\b|\bvisualmente\b", str(x))))
  df_frame["Manipulação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapertar\b|\bsegurar\b|\btocar\b", str(x))))
  df_frame["Marca_corporal"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcicatriz\b", str(x))))
  df_frame["Massa_movimento Mass_motion"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bafluir\b|\binundar\b", str(x))))
  df_frame["Massa_quantificada"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmedida\b|\bmuito\b|\bnenhum\b|\bnúmero\b|\bpeso\b|\btodo\b|\btudo\b", str(x))))
  df_frame["Matar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmatar\b|\bmorto\b", str(x))))
  df_frame["Medida_por_ação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbocado\b|\bpitada\b|\bpunhado\b", str(x))))
  df_frame["Medida_volume"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcolher\sde\ssopa\b|\bfio\b|\bgota\b", str(x))))
  df_frame["Medir_duração"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bano\b|\bdia\b|\bhora\b|\bmês\b|\bmilênio\b|\bminuto\b|\bnanossegundo\b|\bquinzena\b|\bsegundo\b|\bsemana\b|\btempo\b", str(x))))
  df_frame["Meio"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\batravés\b|\bcanal\b|\bcomo\b|\bcomo\b|\bem\b|\bforma\b|\bjeito\b|\bmecanismo\b|\bmeio\b|\bmétodo\b|\bmídia\b|\bmodo\sde\soperação\b|\bpor\b|\bprocedimento\b|\bprocesso\b|\breceita\b|\btática\b|\btécnica\b", str(x))))
  df_frame["Meios_de_comunicação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcelular\b|\btelefone\b", str(x))))
  df_frame["Meios_de_transporte"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bavião\b|\bbalão\b|\bbalsa\b|\bbarca\b|\bbarco\sde\spasseio\b|\bbarco\b|\bbicicleta\b|\bbonde\b|\bcarro\b|\bfrescão\b|\bhelicóptero\b|\bmetrô\b|\bmotocicleta\b|\bnavio\sde\scruzeiro\b|\bnavio\b|\bônibus\sde\spasseio\b|\bônibus\b|\bparador\b|\btáxi\saéreo\b|\btáxi\b|\bteleférico\b|\btrailer\b|\btrem\b|\bvagão\sleito\b|\bveículo\b|\bveleiro\b", str(x))))
  df_frame["Membro_das_forças_armadas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bartilheiro\b|\bcapitão\b|\bnavegador\b", str(x))))
  df_frame["Memória"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\blembrar\b|\brecordação\b", str(x))))
  df_frame["Mirar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdirigido\b|\bmira\b", str(x))))
  df_frame["Modalidades_esportivas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barremesso\b|\bborboleta\b|\bcanoagem\sslalom\b|\bcanoagem\svelocidade\b|\bciclismo\sBMX\scorrida\b|\bciclismo\sBMX\sfreestyle\b|\bciclismo\sBMX\smanobras\b|\bciclismo\sBMX\sracing\b|\bciclismo\sBMX\b|\bciclismo\sde\sestrada\b|\bciclismo\sde\spista\b|\bciclismo\smountain\sbike\b|\bconcurso\scompleto\sde\sequitação\b|\bcorrida\scom\sobstáculos\b|\bcorrida\sde\sfundo\b|\bcorrida\sde\slonga\sdistância\b|\bcorrida\sde\svelocidade\b|\bcorrida\b|\bcostas\b|\bcrawl\b|\bcrol\b|\bdecatlo\b|\bespada\b|\bestilo\slivre\b|\bflorete\b|\bginástica\sartística\b|\bginástica\sde\strampolim\b|\bginástica\srítmica\b|\bheptatlo\b|\bhipismo\sadestramento\b|\bhipismo\sCCE\b|\bhipismo\ssaltos\b|\blançamento\b|\bluta\sestilo\slivre\b|\bluta\sgreco-romana\b|\bmaratona\b|\bmarcha\satlética\b|\bmedley\b|\bmeio-fundo\b|\bmodalidade\b|\bnado\sborboleta\b|\bnado\scostas\b|\bnado\slivre\b|\bnado\speito\b|\bpark\b|\bpeito\b|\brevezamento\b|\bsabre\b|\bsalto\scom\svara\b|\bsalto\sem\saltura\b|\bsalto\sem\sdistância\b|\bsalto\striplo\b|\bsalto\b|\bstreet\b|\btrampolim\sacrobático\b", str(x))))
  df_frame["Modo_de_viver"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baventureiro\b|\bboemia\b|\bboêmio\b|\bdeficiente\b|\bdeficiente\b|\bhippie\b|\bnatureba\b|\bnaturismo\b|\bvegano\b|\bvida\b|\bviver\b", str(x))))
  df_frame["Morrer"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bafogar\b|\baguentar\b|\bfalecer\b|\bresistir\b", str(x))))
  df_frame["Morte"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmorrer\b|\bmorte\b|\bperda\b", str(x))))
  df_frame["Morto_ou_vivo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmortal\b|\bmortal\b|\bvida\b", str(x))))
  df_frame["Móveis"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbanco\b|\bcadeira\b|\bcama\b|\bcarteira\b|\bcolchão\b|\bguarda-roupa\b|\bmesa\b|\bmóvel\b|\bpoltrona\b|\bprateleira\b|\bsofá-cama\b", str(x))))
  df_frame["Movimento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\ba\b|\balterar\b|\bavançar\b|\bbalançar\b|\bbater\b|\bderrubar\b|\bdeslizar\b|\bdesviar\b|\bdirigir\b|\bdisparar\b|\bempurrar\b|\benrolar\b|\bespiralar\b|\bir\b|\bmover\b|\bmovimento\b|\bmudar\b|\bondular\b|\bpercorrer\b|\bpuxar\b|\bremover\b|\brodopiar\b|\brolar\b|\bsair\b|\bseguir\b|\bserpear\b|\bserpentear\b|\btrançar\b|\bviajar\b|\bvoar\b|\bvolta\b|\bvoltar\b|\bziguezaguear\b", str(x))))
  df_frame["Movimento_corporal"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baberto\b|\bcontorcer\b|\bestender\b|\bfechar\b|\bmexer\b|\bmorder\b|\bmover\b|\bsentar\b|\bvirar\b", str(x))))
  df_frame["Movimento_direcional"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcair\b|\bpor\b|\bsubmergir\b|\btombo\b", str(x))))
  df_frame["Movimento_fluídico"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcorrente\b|\bfluido\b|\bgota\b", str(x))))
  df_frame["Mudança_de_estado_operacional"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapagar\b|\bligar\b|\bligar\b|\bligar\b", str(x))))
  df_frame["Mudança_de_fase"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bgelar\b", str(x))))
  df_frame["Mudança_de_temperatura_incoativa"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcalor\b", str(x))))
  df_frame["Mudar_direção"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bvirar\b", str(x))))
  df_frame["Mudar_duração_do_evento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bextensão\b|\bperpetuar\b|\bprolongar\b", str(x))))
  df_frame["Mudar_posição_em_uma_escala"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\batingir\b|\bchegar\b|\belevar\b|\bexplosão\b|\btriplicar\b", str(x))))
  df_frame["Mudar_postura"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdeitar\b", str(x))))
  df_frame["Mudar_tempo_do_evento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdemora\b", str(x))))
  df_frame["Nascer"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bnascer\b|\bnascimento\b", str(x))))
  df_frame["Negação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bnão\b|\bnunca\b|\bsem\b", str(x))))
  df_frame["Negar_ou_conceder_permissão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baprovado\b|\baprovar\b", str(x))))
  df_frame["Negócios"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacademia\sde\sdança\sdo\sventre\b|\bacademia\sde\sdança\b|\bacademia\sde\sginástica\b|\bacademia\b|\badega\b|\bagência\sde\sentretenimento\b|\bagência\sde\sturismo\b|\bagência\sde\sviagens\sa\spontos\sturísticos\b|\bagência\b|\bagropecuária\b|\bantiquário\b|\bassistência\smédica\b|\batacadista\b|\bbanco\b|\bbazar\b|\bboate\b|\bboite\b|\bbomboniere\b|\bbookstore\b|\bboutique\b|\bbutique\b|\bcaixa\seletrônico\b|\bcasa\sde\sdança\b|\bcasa\sde\sshow\b|\bcasa\snoturna\b|\bclub\b|\bcomércio\sde\spneu\b|\bconcessionária\b|\bconfecção\b|\bconfeitaria\b|\bconsultoria\sde\srecursos\shumanos\b|\bconsultório\b|\bcorporação\b|\bdelivery\b|\bdesenvolvedora\sde\simóveis\b|\bdestilaria\b|\bdistribuidor\sde\sbebidas\b|\bdoceria\b|\bdrogaria\b|\beditora\sde\sjornais\b|\beditora\b|\bempreendimento\b|\bempresa\sde\slembrancinhas\sde\sfesta\b|\bempresa\sde\sorganização\sde\seventos\b|\bempresa\sde\svigilância\b|\bempresa\b|\bentrega\sde\srefeições\sprontas\b|\bestabelecimento\b|\bfábrica\b|\bfarmácia\b|\bfeira\sde\sartesanato\b|\bfirma\b|\bfloricultura\b|\bfornecedor\sde\sartigos\shospitalares\b|\bfranquia\b|\bfrutaria\b|\bhamburgueria\b|\binvestimento\b|\bjoalheria\b|\bjornal\b|\bkaraokê\b|\blava-rápido\b|\blivraria\b|\blocal\scom\smúsica\sao\svivo\b|\blocal\spara\seventos\b|\bloja\sde\sacessórios\sautomotivos\b|\bloja\sde\sacessórios\sde\smoda\b|\bloja\sde\sartigos\spara\scama\smesa\se\sbanho\b|\bloja\sde\sartigos\spara\sdança\b|\bloja\sde\sartigos\spara\sfestas\b|\bloja\sde\sazulejos\b|\bloja\sde\sbrinquedos\b|\bloja\sde\scalçado\b|\bloja\sde\sCDs\susados\b|\bloja\sde\scolchões\b|\bloja\sde\sconveniência\b|\bloja\sde\scostura\b|\bloja\sde\sdecoração\b|\bloja\sde\sdepartamento\b|\bloja\sde\sdiscos\b|\bloja\sde\seletrodomésticos\b|\bloja\sde\seletrônicos\b|\bloja\sde\sjogos\b|\bloja\sde\slingerie\b|\bloja\sde\smadeiras\b|\bloja\sde\smateriais\sartísticos\b|\bloja\sde\smateriais\sde\sconstrução\b|\bloja\sde\smateriais\spara\sartesanato\b|\bloja\sde\smoda\sfeminina\b|\bloja\sde\smoda\sinfantil\b|\bloja\sde\smoda\smasculina\b|\bloja\sde\smóveis\sinfantis\b|\bloja\sde\smúsica\b|\bloja\sde\spresentes\b|\bloja\sde\sprodutos\snaturais\b|\bloja\sde\sração\b|\bloja\sde\sroupa\b|\bloja\sde\sroupas\sde\sbanho\b|\bloja\sde\sroupas\sde\scama\b|\bloja\sde\sroupas\sde\spraia\b|\bloja\sde\sroupas\spara\sbebês\b|\bloja\sde\svideogame\b|\bloja\spara\sbebê\b|\bloja\b|\bmercadinho\b|\bmercado\b|\bmercearia\b|\bmultinacional\b|\bnegociação\b|\bnegócio\b|\boficina\sde\scarroceria\b|\boperadora\b|\bótica\b|\bperfumaria\b|\bpet\sshop\b|\bpetshop\b|\bposto\sde\scombustível\b|\bposto\sde\sgasolina\b|\bprodutora\sde\scine\se\svídeo\b|\bpromoção\b|\bprovedor\sde\sinternet\b|\bsalão\sde\sbeleza\b|\bserviço\sde\sajuste\sde\sroupas\b|\bserviço\sde\salinhamento\se\sbalanceamento\b|\bserviço\spúblico\b|\bserviço\sveterinário\sde\semergência\b|\bspa\b|\bsupermercado\b|\bvenda\b|\bvinícola\b|\bwi-fi\b", str(x))))
  df_frame["Nível_de_luz"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bescuridão\b|\bescuro\b|\bluminoso\b", str(x))))
  df_frame["Nomeação_simples"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bchamar\b", str(x))))
  df_frame["Nomear"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bnomear\b", str(x))))
  df_frame["Nome_simples"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\boração\b|\bpalavra\b|\bsigla\b|\btermo\b|\bverbo\b|\bvocábulo\b", str(x))))
  df_frame["Notabilidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdestacar-se\b|\bganhar\b|\bgrande\b|\bmaior\b|\bpequeno\b", str(x))))
  df_frame["Números_cardinais"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\b16\b|\b21\b|\bambos\b|\bbilhão\b|\bcatorze\b|\bcem\b|\bcento\b|\bcinco\b|\bcinquenta\se\sdois\b|\bcinquenta\b|\bdez\b|\bdezenove\b|\bdezesseis\b|\bdezessete\b|\bdezoito\b|\bdois\b|\bdoze\b|\bdual\b|\bdupla\b|\bduzentos\b|\bmeio\b|\bmil\b|\bmilhão\b|\bmilhar\b|\bnove\b|\bnoventa\b|\bnúmero\b|\boitenta\b|\boito\b|\bonze\b|\bpar\b|\bquarenta\b|\bquatorze\b|\bquatro\b|\bquinhentos\b|\bquinze\b|\bseis\b|\bsessenta\b|\bsete\b|\bsetenta\se\squatro\b|\bsetenta\b|\btrês\b|\btreze\b|\btrinta\se\scinco\b|\btrinta\se\sdois\b|\btrinta\se\snove\b|\btrinta\se\soito\b|\btrinta\se\squatro\b|\btrinta\se\sseis\b|\btrinta\se\ssete\b|\btrinta\se\strês\b|\btrinta\se\sum\b|\btrinta\b|\bum\b|\buma\b|\bvinte\se\scinco\b|\bvinte\se\sdois\b|\bvinte\se\snove\b|\bvinte\se\soito\b|\bvinte\se\squatro\b|\bvinte\se\sseis\b|\bvinte\se\ssete\b|\bvinte\se\strês\b|\bvinte\se\sum\b|\bvinte\b|\bzero\b|\bzilhão\b", str(x))))
  df_frame["Números_ordinais"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdécimo\snono\b|\bdécimo\ssétimo\b|\bdécimo\ssexto\b|\bdécimo\sterceiro\b|\bdécimo\b|\bdécimo\b|\bnono\b|\bnono\b|\boitavo\b|\boitavo\b|\bprimeiro\b|\bprimeiro\b|\bquarto\b|\bquarto\b|\bquinto\b|\bsegundo\b|\bsegundo\b|\bsétimo\b|\bsexto\b|\bsexto\b|\bterceiro\b|\bterceiro\b|\búltimo\b", str(x))))
  df_frame["Obter_documento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdocumento\b|\bobter\b|\brenovar\b|\btirar\b", str(x))))
  df_frame["Obviedade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bclaro\b|\bclaro\b|\bdisponível\b|\bevidente\b|\bimperceptível\b", str(x))))
  df_frame["Ocorrência_condicional"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcondicionado\b|\bse\b", str(x))))
  df_frame["Oferecer"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\boferecer\b|\boferta\b|\bservir\b", str(x))))
  df_frame["Operar_um_sistema"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfuncionamento\b|\bfuncionar\b|\boperar\b", str(x))))
  df_frame["Operar_veículo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bandar\b|\bmontar\b|\bpilotar\b|\bteleguiado\b", str(x))))
  df_frame["Opinião"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bachar\b|\bacreditar\b|\bcrer\b|\bopinião\b|\bpensar\b|\bteoria\b|\bteoricamente\b|\bvisão\b", str(x))))
  df_frame["Oportunidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bchance\b|\boportunidade\b|\boportuno\b", str(x))))
  df_frame["Organização"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bagência\sde\snotícias\b|\bassociação\b|\bcartel\b|\bclube\b|\bcomitê\b|\bconselho\b|\bcorporação\b|\bdelegação\b|\bdesorganização\b|\bdesorganizar\b|\bempresa\b|\bfraternidade\b|\bgoverno\b|\bgrupo\b|\binteligência\b|\bjudiciário\b|\bjuntar\b|\bliga\b|\bmultinacional\b|\bordem\b|\borganização\b|\borganizar\b|\bórgão\b|\bparlamento\b|\bsociedade\b|\bunião\b", str(x))))
  df_frame["Órgão_judicial"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bvara\b", str(x))))
  df_frame["Origem"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bafricano\b|\bamericano\b|\bárabe\b|\bargentino\b|\basiático\b|\bassírio\b|\bbizantino\b|\bbrasileiro\b|\bbritânico\b|\bcanadense\b|\bcapixaba\b|\bchinês\b|\bcolombiano\b|\bcubano\b|\bdatar\b|\bde\b|\begípcio\b|\bescocês\b|\bespanhol\b|\beuropeu\b|\bfinlandês\b|\bfrancês\b|\bgrego\b|\bholândes\b|\bindiano\b|\bindígena\b|\binternacional\b|\biraniano\b|\biraquiano\b|\birlandês\b|\bitaliano\b|\bjamaicano\b|\bjaponês\b|\bjordaniano\b|\blocal\b|\bmineiro\b|\bnacional\b|\bnacional\b|\boriental\b|\borigem\b|\botomano\b|\bportuguês\b|\bqueniano\b|\bromano\b|\brusso\b|\bsaudita\b|\bsírio\b|\bsuíço\b|\btupinambá\b|\bturco\b|\bvietnamita\b|\bvir\sde\b", str(x))))
  df_frame["Origem_indígena"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bnativo\b", str(x))))
  df_frame["Padrão_temporal"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\britmo\b", str(x))))
  df_frame["Parcialidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bneutro\b", str(x))))
  df_frame["Parentesco"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bagregado\b|\bavó\b|\bfilha\b|\bfilho\b|\birmã\b|\birmão\b|\bmadrinha\b|\bmãe\b|\bmamãe\b|\bmaterno\b|\bneto\b|\bpadrasto\b|\bpai\b|\bpapai\b|\bparente\b|\bprimo\b|\btio\b|\bvó\b", str(x))))
  df_frame["Partes_de_roupas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbolso\b|\bbotão\b|\bcapuz\b|\bfita\b|\bsola\b", str(x))))
  df_frame["Partes_do_corpo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbarriga\b|\bboca\b|\bbraço\b|\bcabeça\b|\bcabelo\b|\bcélula\b|\bcérebro\b|\bcintura\b|\bcolo\b|\bcoluna\b|\bcoração\b|\bcorpo\b|\bcostas\b|\bcostela\b|\bcotovelo\b|\bdedo\b|\bmão\b|\bmente\b|\bnariz\b|\bolho\b|\bombro\b|\bosso\b|\bpeito\b|\bperna\b|\brosto\b|\btesta\b", str(x))))
  df_frame["Parte_como_segmentos_ordenados"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcamada\b", str(x))))
  df_frame["Parte_elemento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baglomerado\b|\bbocado\b|\bcaco\b|\bchip\b|\bfarrapo\b|\bfatia\b|\bfragmento\b|\bgalho\b|\blâmina\b|\bmigalha\b|\bnaco\b|\bnódulo\b|\bpedaço\b|\bplaca\b|\btorrão\b|\btrecho\b", str(x))))
  df_frame["Parte_interior_exterior"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bexterior\b|\bexterno\b|\binterior\b|\binterno\b", str(x))))
  df_frame["Parte_moldada"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balça\b|\bboca\b|\bborda\b|\bbraço\b|\bcasca\b|\bgraveto\b|\bperna\b", str(x))))
  df_frame["Parte_orientacional"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bápice\b|\bbaixo-ventre\b|\bbase\b|\bcanto\b|\bcimeira\b|\bcrista\b|\bdireita\b|\bdireito\b|\besquerda\b|\besquerdo\b|\bface\b|\bfrente\b|\bfrente\b|\bfrontal\b|\bfundo\b|\binferior\b|\binferior\b|\blado\b|\bleste\b|\bleste\b|\bnoroeste\b|\bnorte-sul\b|\bnorte\b|\bnorte\b|\bocidental\b|\boeste\b|\boeste\b|\boriental\b|\bpé\b|\bpico\b|\bposterior\b|\bretaguarda\b|\bsubdimensionado\b|\bsul\b|\bsul\b|\bsulista\b|\bsuperior\b|\btopo\b|\btraseiro\b|\bverso\b", str(x))))
  df_frame["Parte_todo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcentésimo\b|\bcentro\b|\bcompleta\b|\bcompor\b|\bconstituir\b|\bdecomposição\b|\bdedo\b|\bdividir\b|\bfazer\sparte\b|\bfiapo\b|\bformar\b|\bfragmento\b|\bgancho\b|\bgota\b|\bintegrar\b|\binteiro\b|\binterno\b|\bmetade\b|\boitavo\b|\bparte\b|\bpertencer\b|\bpingo\b|\bponta\b|\bporção\b|\bprefixo\b|\bquinto\b|\bseção\b|\bsegmento\b|\bter\b|\bterceiro\b|\btrimestre\b", str(x))))
  df_frame["Participação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbaladar\b|\bcelebrar\b|\bcomprometimento\b|\bintegrante\b|\bjogar\b|\bparticipação\b|\bparticipante\b|\bparticipar\b", str(x))))
  df_frame["Partida_do_turista_alojamento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcheck-out\b|\bsaída\b", str(x))))
  df_frame["Partida_do_turista_localidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcheck-in\b|\bembarcar\b|\bembarque\b", str(x))))
  df_frame["Partir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bafastar\b|\bdebandar\b|\bdeixar\b|\bdesaparecer\b|\bdesaparecimento\b|\bemergir\b|\bescapar\b|\bexôdo\b|\bfuga\b|\bir\sembora\b|\bir\b|\bpartir\b|\bsaída\b|\bsair\b|\bsumir\b", str(x))))
  df_frame["Partitivo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bde\b|\bfora\b|\bparte\b", str(x))))
  df_frame["Peça_arquitetônica"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barco\b|\bazulejo\b|\bbalcão\b|\bchão\b|\bcornija\b|\bfachada\b|\bfundação\b|\bjanela\b|\blaje\b|\blance\b|\blareira\b|\bmurada\b|\bmureta\b|\bparapeito\b|\bparede\b|\bpatamar\b|\bpiso\b|\bporta\b|\btelhado\b|\bteto\b|\btrave\b", str(x))))
  df_frame["Pedir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bchamar\b|\bconvidar\b|\bconvite\b|\bdemanda\b|\bdemandar\b|\bmandar\b|\bordem\b|\bpedido\b|\bpedir\b|\bsolicitar\b", str(x))))
  df_frame["Pegar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapanhar\b|\bapossar\b|\bapreender\b|\bapreensão\b|\bcomandar\b|\blevar\b|\bpegar\b", str(x))))
  df_frame["Pegar_fogo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bqueimar\b", str(x))))
  df_frame["Percepção_ativa"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badmirar\b|\barregalar\b|\bassistir\b|\bavistar\b|\bcheirar\b|\bcontemplar\b|\bdeparar\b|\bembasbacar\b|\bencarar\b|\benxergar\b|\bescutar\b|\bespiar\b|\bespionar\b|\bespreitada\b|\bespreitar\b|\bfungada\b|\bfungar\b|\bgosto\b|\bobservação\b|\bobservar\b|\bolhar\b|\bolhar\b|\bouvir\b|\bpalpar\b|\bprovar\b|\brelançar\b|\brelance\b|\bsaborear\b|\bsentir\b|\bver\b", str(x))))
  df_frame["Período_de_tempo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\banoitecer\b|\bdia\sa\sdia\b|\bdia\b|\bhorário\b|\btempo\b|\bvida\b", str(x))))
  df_frame["Persuasão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconvencer\b|\bmotivar\b", str(x))))
  df_frame["Pessoas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balguém\b|\balguém\b|\bcara\b|\bcaráter\b|\bcavalheiro\b|\bcidadão\b|\bcolega\b|\bcompanheiro\b|\bdama\b|\bgalera\b|\bgaroto\b|\bgente\b|\bhomem\b|\bhumanidade\b|\bhumano\b|\bindivíduo\b|\bmenino\b|\bmoço\b|\bmortal\b|\bmulher\b|\bnenhum\b|\bninguém\b|\bninguém\b|\bpersonagem\b|\bpessoa\b|\bpessoal\b|\bpovo\b|\bpúblico\b|\bquem\b|\bquem\b|\brapaz\b|\bser\shumano\b|\bser\svivo\b|\btodo\smundo\b|\btodos\b|\bum\b|\bvida\b", str(x))))
  df_frame["Pessoas_por_atividade_de_lazer"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baventureiro\b|\bbackpacker\b|\bbanhista\b|\bfolião\b|\bfrequentador\b|\bgamer\b|\bgeek\b|\bjogador\b|\bmotoqueiro\b|\bnaturista\b|\bturista\b|\bviajante\b|\bvisitante\b", str(x))))
  df_frame["Pessoas_por_atividade_transitória"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bobservador\b", str(x))))
  df_frame["Pessoas_por_enquadramento_social"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcaipira\b|\bescravidão\b|\bescravo\b|\bmendigo\b|\bpedinte\b|\bsenhor\b", str(x))))
  df_frame["Pessoas_por_etnia"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bafro-brasileiro\b|\bbranco\b|\bcigano\b|\bíndio\b|\bnegro\b", str(x))))
  df_frame["Pessoas_por_origem"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balagoano\b|\balemão\b|\bamericano\b|\baustríaco\b|\bboliviano\b|\bbrasileiro\b|\bbrasileiro\b|\bbritânico\b|\bcaliforniano\b|\bcarioca\b|\bescocês\b|\bespanhol\b|\bestrangeiro\b|\bET\b|\bfrancês\b|\bfrancesa\b|\bgrego\b|\bgringo\b|\bholandês\b|\binca\b|\bíndio\b|\binglês\b|\binglesa\b|\biraniano\b|\birlandês\b|\bitaliano\b|\bmexicano\b|\bnova\siorquino\b|\botomano\b|\bpersa\b|\bportuguês\b|\bturco\b", str(x))))
  df_frame["Pessoas_por_religião"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbatista\b|\bbudismo\b|\bbudista\b|\bcandomblé\b|\bcatolicismo\b|\bcatólico\b|\bcristão\b|\bespírita\b|\bespiritismo\b|\bfanático\b|\bfiel\b|\binfiel\b|\bislamismo\b|\bjudaísmo\b|\bjudeu\b|\blaico\b|\bmórmon\b|\bmulçumano\b|\bpagão\b|\bprotestante\b|\bprotestantismo\b|\bumbanda\b", str(x))))
  df_frame["Pessoas_por_residência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bvizinho\b", str(x))))
  df_frame["Pessoas_por_vocação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babade\b|\bacadêmico\b|\badvogado\b|\bagente\sduplo\b|\bagente\b|\balfaiate\b|\baluno\b|\bambientalista\b|\bantropólogo\b|\bapóstolo\b|\barqueólogo\b|\barquiteto\b|\bartesão\b|\bartista\b|\bassistente\b|\bastrólogo\b|\bastronauta\b|\batendente\b|\batleta\b|\bator\b|\batriz\b|\bautor\b|\bbancário\b|\bbarman\b|\bbeato\b|\bbibliotecário\b|\bbiólogo\b|\bbispo\b|\bbombeiro\b|\bcabeleireiro\b|\bcaçador\b|\bcamareiro\b|\bcantor\b|\bcapitão\b|\bcardeal\b|\bcarpinteiro\b|\bcartógrafo\b|\bchefe\sde\scozinha\b|\bchefe\b|\bcientista\b|\bcirurgião\splástico\b|\bcomerciante\b|\bcomissário\sde\sbordo\b|\bconcursado\b|\bconsultor\b|\bcontador\b|\bcoreógrafo\b|\bcorrespondente\b|\bcostureiro\b|\bcoveiro\b|\bcozinheiro\b|\bcriado\b|\bdançarino\b|\bdedetizador\b|\bdelegado\b|\bdentista\b|\bdeputado\b|\bdesenhista\b|\bdesenvolvedor\sde\ssoftware\b|\bdesenvolvedor\sweb\b|\bdesigner\b|\bdetetive\sparticular\b|\bdetetive\b|\bdiácono\b|\bdiretor\b|\bdocente\b|\bdono\sde\scasa\b|\beditor\b|\beducador\b|\bempregado\sdoméstico\b|\bempresário\b|\benfermeiro\b|\bengenheiro\b|\bescritor\b|\bescriturário\b|\bespecialista\b|\bespeculador\b|\bespião\b|\besteticista\b|\bestudante\b|\bexecutivo\b|\bexplorador\b|\bextrativista\b|\bfabricante\b|\bfarmacêutico\b|\bfaxineiro\b|\bfazendeiro\b|\bfísico\b|\bfisioterapeuta\b|\bfotógrafo\b|\bfreira\b|\bfrentista\b|\bfuncionário\b|\bgaitista\b|\bgandula\b|\bgarçom\b|\bgarçonete\b|\bgarimpeiro\b|\bgerente\b|\bgovernador\b|\bguarda-costas\b|\bguia\sturístico\b|\bguia\b|\bhistoriador\b|\binstrumentista\b|\bjardineiro\b|\bjoalheiro\b|\bjornalista\b|\bjuiz\b|\blançador\b|\blinguista\b|\bmágico\b|\bmagistrado\b|\bmagnata\sdo\spetróleo\b|\bmalabarista\b|\bmanobrista\b|\bmaqueiro\b|\bmaquinista\b|\bmatemático\b|\bmecânico\b|\bmédico\b|\bmedium\b|\bmergulhador\b|\bmineiro\b|\bministro\b|\bmissionário\b|\bmonge\b|\bmonsenhor\b|\bmotoboy\b|\bmotorista\b|\bmúsico\b|\bneurocientista\b|\boficial\b|\boperador\sde\sturismo\b|\boperário\b|\bpadeiro\b|\bpadre\b|\bpalestrante\b|\bpalhaço\b|\bparaquedista\b|\bpastor\b|\bpedreiro\b|\bpesquisador\b|\bpiloto\b|\bpintor\b|\bpirata\b|\bpoeta\b|\bpolícia\scivil\b|\bpolícia\b|\bpolicial\sà\spaisana\b|\bpolicial\b|\bpolítico\b|\bporta-voz\b|\bprefeito\b|\bpresbítero\b|\bprodutor\b|\bprofessor\sde\sdança\sde\ssalão\b|\bprofessor\b|\bprofeta\b|\bprofissional\b|\bprofissional\b|\bprogramador\b|\bpsicólogo\b|\bpsiquiatra\b|\bquímico\b|\bradialista\b|\brecepcionista\b|\brecreador\b|\brecreador\b|\brei\smago\b|\brepórter\b|\bsacerdote\b|\bsecretário\b|\bsegurança\b|\bsenador\b|\bseringueiro\b|\bservente\b|\bservidor\b|\bsociologista\b|\bsocorrista\b|\bsoldado\b|\bsolista\b|\btabelião\b|\btaxista\b|\btécnico\b|\btoxicologista\b|\btrabalhador\b|\buniversitário\b|\bvendedor\b|\bveterinário\b|\bvoluntário\b|\bzelador\b", str(x))))
  df_frame["Planejamento_do_turista"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bplanejamento\b|\bplanejar\b|\bpreparação\b", str(x))))
  df_frame["Plantar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barborizar\b", str(x))))
  df_frame["Plantas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bangiosperma\b|\bárvore\b|\bcoqueiro\b|\berva\sdaninha\b|\bflor\b|\bflora\b|\bfolha\b|\bfruto\b|\bgavinha\b|\bpalmeira\b|\bpau-brasil\b|\bpoligonáceo\b|\brosa\b|\btrepadeira\b|\btronco\b|\bvara\b", str(x))))
  df_frame["Plenitude"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bvácuo\b", str(x))))
  df_frame["Poder_aquisitivo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmultimilionário\b|\bpobre\b|\brico\b|\briqueza\b", str(x))))
  df_frame["Polícia"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdelegacia\b|\bpolícia\b|\bpoliciamento\b", str(x))))
  df_frame["Popularidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\blegal\b|\bmaneiro\b|\bpopular\b|\bpopularizar\b|\bquente\b", str(x))))
  df_frame["Posição_distribuída"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badornar\b|\balinhar\b|\bcercar\b|\bcobrir\b|\bdecoração\b|\bdecorar\b|\bdesarrumar\b|\bencapotar\b|\bencher\b|\benfeitar\b|\benvolver\b|\bincrustar\b|\blotar\b|\bornamentar\b|\bpavimentar\b|\bpontilhar\b|\brecobrir\b|\brevestir\b|\bsobre\b", str(x))))
  df_frame["Posição_em_uma_escala"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\briqueza\b", str(x))))
  df_frame["Posse"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapresentar\b|\bbem\b|\bcontar\b|\bconter\b|\bcustódia\b|\bde\b|\bdesejo\b|\bdeter\b|\bdono\b|\bfalta\b|\bfaltar\b|\bfalto\b|\bficar\b|\bfruir\b|\binsuficiente\b|\bmanter\b|\bobter\b|\bpatenteado\b|\bpatentear\b|\bpertencer\b|\bpertences\b|\bposse\b|\bpossessão\b|\bpossuir\b|\bpropriedade\b|\bproprietário\b|\bpróprio\b|\bquerer\b|\bter\b", str(x))))
  df_frame["Possibilidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdar\spara\b|\bdever\b|\bpoder\b|\bprovavelmente\b", str(x))))
  df_frame["Possibilidades"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balternativa\b|\bchance\b|\bdever\b|\bescolha\b|\bfuturo\b|\bmaneira\b|\bopção\b|\bou\b|\bpoder\b|\bpossível\b|\buso\b", str(x))))
  df_frame["Prática"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bprática\b|\bpraticante\b|\bpraticar\b|\btreinamento\b|\btreinar\b|\btreino\b", str(x))))
  df_frame["Precisão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bexato\b|\bicônico\b|\bprecisão\b", str(x))))
  df_frame["Precisar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bnecessidade\b|\bprecisar\b|\bter\sque\b", str(x))))
  df_frame["Prédios"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babrigo\b|\bacrópole\b|\baeroporto\b|\balojamento\b|\bambulatório\b|\banexo\b|\baquário\b|\barena\b|\barmazém\b|\barquivo\sestadual\b|\barranha-céu\b|\barranha-céus\b|\bauditório\b|\bbasílica\b|\bbiblioteca\b|\bcabana\b|\bcâmara\smunicipal\b|\bcampanário\b|\bcanil\b|\bcaravançará\b|\bcarvoaria\b|\bcasa\sda\sfazenda\b|\bcasa\sde\scampo\b|\bcasa\sde\scultura\b|\bcasa\sde\sjogos\b|\bcasa\sfluvial\b|\bcasa\b|\bcasebre\b|\bcastelo\b|\bcatedral\b|\bceleiro\b|\bcentro\scultural\b|\bcentro\sde\sarte\b|\bcentro\sde\sconferências\b|\bcentro\sde\sconvenções\b|\bcentro\sde\sdiversões\sinfantil\b|\bcentro\sde\seventos\b|\bcentro\sespírita\b|\bcentro\smédico\spúblico\b|\bcentro\smédico\b|\bcentro\stecnológico\b|\bchalé\b|\bcidadela\b|\bcine-theatro\b|\bcinema\b|\bcirco\b|\bclinica\sde\sreabilitação\b|\bclube\sde\sfutebol\b|\bclube\sde\stiro\b|\bcobertura\b|\bcompanhia\sde\ssaneamento\b|\bcompanhia\steatral\b|\bcondomínio\b|\bconservatório\b|\bconstrução\b|\bdelegacia\sde\spolícia\b|\bdepartamento\sde\spassaporte\b|\bdepartamento\sde\spolícia\sdo\sestado\b|\bdepartamento\sde\ssegurança\spública\b|\bdepartamento\suniversitário\b|\bdepartamento\b|\bdependência\b|\bdiscoteca\b|\bdomiciliar\b|\bdomicílio\b|\bdormitório\b|\bduplex\b|\bedifício\b|\bemergência\b|\bescola\sde\ssamba\b|\bescritório\sde\sempresa\b|\besquadrão\sde\sresgate\b|\bestábulo\b|\bestação\sde\srádio\b|\bestação\sde\stratamento\sde\ságua\b|\bestação\sferroviária\b|\bestádio\b|\bestrutura\b|\bestufa\b|\bfábrica\b|\bfarol\b|\bfazenda\b|\bfortaleza\b|\bforte\b|\bfortificação\b|\bgaleria\sde\sarte\b|\bgaleria\b|\bgalpão\b|\bgaragem\b|\bgazebo\b|\bguarda\smunicipal\b|\bhabitação\b|\bherdade\b|\bhipódromo\b|\bhospital\sgeral\b|\bhospital\sinfantil\b|\bhospital\smilitar\b|\bhospital\smunicipal\b|\bhospital\sparticular\b|\bhospital\spsiquiátrico\b|\bhospital\b|\biglu\b|\bigreja\sbatista\b|\bigreja\b|\bimobiliária\b|\bjardim\sbotânico\b|\bjardim\szoológico\b|\blar\b|\blivraria\b|\bmansão\b|\bmaternidade\b|\bmesquita\b|\bmosteiro\b|\bmuseu\sde\sarte\smoderna\b|\bmuseu\sde\sarte\b|\bmuseu\sdo\spatrimônio\b|\bmuseu\shistórico\slocal\b|\bmuseu\shistórico\b|\bmuseu\smarítimo\b|\bmuseu\smilitar\b|\bmuseu\b|\bpagode\b|\bpalácio\b|\bparque\sde\sdiversão\b|\bparque\stemático\b|\bpavilhão\sde\seventos\b|\bpavilhão\b|\bpensão\b|\bpetshop\b|\bpinacoteca\b|\bpirâmide\b|\bpoliclínica\b|\bposto\sde\ssaúde\scomunitário\b|\bpraça\b|\bprédio\b|\bprefeitura\b|\bpronto\satendimento\b|\bquartel\b|\bquiosque\b|\brepartição\spública\smunicipal\b|\bresidência\b|\brotunda\b|\bruína\b|\bsala\sde\sconcertos\b|\bsalão\sde\sdança\b|\bsalão\sde\sfesta\b|\bsalão\b|\bsauna\sgay\b|\bsauna\b|\bsecretaria\smunicipal\sde\ssegurança\b|\bsecretaria\smunicipal\sdo\smeio\sambiente\b|\bserviço\sde\ssaúde\smental\b|\bshopping\scenter\b|\bshopping\b|\bsinagoga\b|\bsolar\b|\bsupermercado\b|\bteatro\b|\btemplo\b|\btenda\síndia\b|\btenda\b|\btermas\b|\bterminal\b|\bteto\b|\btorre\b|\btriplex\b|\bvila\b|\bzoo\b|\bzoológico\b", str(x))))
  df_frame["Preencher"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babastecer\b|\blotar\b|\bpintar\b", str(x))))
  df_frame["Preferência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bpreferência\b|\bpreferir\b|\bpreterir\b", str(x))))
  df_frame["Preferred_alternative_scenario"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfavorito\b|\bpreferido\b", str(x))))
  df_frame["Preliminares"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baclimatação\b|\baclimatar\b|\bconcentração\b|\bconcentrar\b", str(x))))
  df_frame["Prendedor"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badesivo\b|\blacre\b", str(x))))
  df_frame["Prender"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdomiciliar\b|\bprender\b|\bprisão\b", str(x))))
  df_frame["Presença"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barraigado\b|\bfaltar\b|\bmanifesto\b|\bpresente\b", str(x))))
  df_frame["Presságio"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bprenunciar\b|\bprenúncio\b", str(x))))
  df_frame["Prevaricação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmentir\b", str(x))))
  df_frame["Primeiro_na_classificação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bprincipalmente\b", str(x))))
  df_frame["Probabilidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bprobabilidade\b", str(x))))
  df_frame["Processo_continuar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcorrer\b|\bficar\b|\bproceder\b", str(x))))
  df_frame["Processo_estado_completo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcompleto\b", str(x))))
  df_frame["Processo_iniciar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomeçar\b|\berupção\b|\bestrear\b|\binaugurar\b|\bincipiente\b|\biniciar\b|\binício\b|\birromper\b|\bnascente\b|\bpassar\b|\bprincipiar\b|\bsurgimento\b", str(x))))
  df_frame["Processo_nuclear"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bradioatividade\b", str(x))))
  df_frame["Processo_parar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcessar\b", str(x))))
  df_frame["Procurar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbusca\b|\bbuscar\b|\bprocurado\b", str(x))))
  df_frame["Profissionais_médicos"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\benfermeiro\b", str(x))))
  df_frame["Progression"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdesenvolver\b|\bprogressivamente\b", str(x))))
  df_frame["Prohibiting_or_licensing"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badmitir\b|\baprovar\b|\bdeixar\b|\bpermitir\b|\bproibir\b", str(x))))
  df_frame["Projeto"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bestratégia\b|\bplanejar\b|\bprograma\b|\bprojeto\b", str(x))))
  df_frame["Propor_ideia"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bprojetar\b", str(x))))
  df_frame["Propriedade_mental"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babstrato\b|\bartista\b|\bbagunceiro\b|\bbom\b|\bbrilhante\b|\bcriatividade\b|\bcriativo\b|\bcuidado\b|\bcuidadoso\b|\bcurioso\b|\bdoido\b|\bexcepcional\b|\bfilosófico\b|\bgenial\b|\bgenialidade\b|\bhumorado\b|\binteligência\b|\blouco\b|\bresponsável\b|\bsensível\b|\bsolícito\b|\btalentoso\b|\btímido\b|\bvergonha\b", str(x))))
  df_frame["Prosperar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcrescer\b", str(x))))
  df_frame["Prova"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bteste\b", str(x))))
  df_frame["Proximidade_graduável"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bafastado\b|\blonge\b|\bproximidade\b|\bpróximo\b|\bpróximo\b|\brente\b", str(x))))
  df_frame["Proximidade_não_graduável"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badiante\b|\bao\slado\sde\b|\batrás\sde\b|\bdebaixo\sde\b|\bem\sfrente\sde\b|\bembaixo\sde\b|\bperto\sde\b|\brente\sa\b|\bsob\b", str(x))))
  df_frame["Publicar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\blançamento\b|\bpublicar\b", str(x))))
  df_frame["Quadro_de_horários"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bagendamento\b|\bprogramação\b|\broteiro\b", str(x))))
  df_frame["Qualidades_de_cor"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmonocromático\b|\bpálido\b|\bvibrante\b", str(x))))
  df_frame["Quantidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcento\b|\bdiverso\b|\bmais\sou\smenos\b|\bmais\b|\bmenos\b|\bmuito\b", str(x))))
  df_frame["Quantidade_proporcional"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baproximadamente\b|\baté\b|\bcerca\sde\b|\bmais\b|\bmuito\b|\bpouco\b|\bpouquinho\b|\bpraticamente\b|\bquase\b|\bvários\b", str(x))))
  df_frame["Quebrar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barrebentar\b|\bdescolar\b|\bquebrar\b|\bsoltar\b", str(x))))
  df_frame["Queimar_com_fogo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfogo\b|\bfogueira\b", str(x))))
  df_frame["Questionar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdúvida\b|\bperguntar\b|\bquestionamento\b|\bquestionar\b", str(x))))
  df_frame["Razão"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bpor\sisso\b|\bpor\sque\b|\bpor\b|\bporquê\b|\bprincípio\b|\brazão\b|\bsentido\b", str(x))))
  df_frame["Reações_da_torcida"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baplaudir\b|\bapoiar\b|\bassistir\b|\bchorar\b|\bcomemoração\b|\bcomemorar\b|\bdespertar\b|\bexplodir\b|\bfrustração\b|\bgritar\b|\bobservar\b|\bovacionar\b|\btorcer\b|\bvaiar\b|\bver\b|\bvibrar\b", str(x))))
  df_frame["Realização"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balcançar\b|\bconquista\b|\brealização\b", str(x))))
  df_frame["Recipientes"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bburaco\b|\bcaixa\b|\bcesta\b|\bchopeira\b|\bcompartimento\b|\bcopo\b|\bcumbuca\b|\bembalagem\b|\bgaiola\b|\bgarrafa\b|\bpá\b|\bpoço\b|\bpote\b|\bsacola\b|\bvaso\b", str(x))))
  df_frame["Reclamar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bqueixa\b|\breclamação\b", str(x))))
  df_frame["Rede"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\brede\b|\bweb\b", str(x))))
  df_frame["Referir-se_pelo_nome"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bchamar\b|\bdesignação\b|\bendereçar\b|\bnome\b|\breferir\b", str(x))))
  df_frame["Registro"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcópia\b|\bedição\b|\bobra\b", str(x))))
  df_frame["Relação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\be\b|\bligação\b|\brelação\b", str(x))))
  df_frame["Relação_de_duração"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdurante\b|\bdurar\b|\bperdurar\b|\bpor\b", str(x))))
  df_frame["Relação_de_perfilamento_interior"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\ba\b|\bdentre\b|\bdentro\sde\b|\bdentro\b|\bem\smeio\sa\b|\bem\b|\bentre\b|\bexterno\b|\bfora\b|\binterno\b|\bno\sinterior\sde\b|\bno\smeio\sde\b", str(x))))
  df_frame["Relação_locativa"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bà\sfrente\sde\b|\bacima\sdo\ssolo\b|\bacima\b|\badjacente\b|\balém\sde\b|\balhures\b|\bali\b|\bao\slongo\sde\b|\baonde\b|\baqui\b|\baté\b|\batravés\sde\b|\bcá\b|\bcontinental\b|\bcontinental\b|\bdepois\b|\bdistante\b|\bem\stoda\sparte\b|\bem\stodo\b|\bem\b|\bembaixo\b|\bencontrar\b|\bentre\b|\benvolver\b|\bfora\b|\bfronteirar\b|\blá\b|\blonge\b|\bno\sar\b|\bno\stopo\b|\bonde\b|\bonipresente\b|\bpara\scima\b|\bpara\b|\bparalelo\sa\b|\bperto\b|\bremoto\b|\bsobre\b|\bsubterrâneo\b", str(x))))
  df_frame["Relação_locativa_direcional"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babaixo\b|\bacima\b|\bem\scima\b|\bem\sfrente\b|\bfora\sde\b|\bleste\b|\bleste\b|\bnordeste\b|\bnordeste\b|\bnoroeste\b|\bnoroeste\b|\bnorte\b|\bnorte\b|\boeste\b|\boeste\b|\bsudeste\b|\bsudeste\b|\bsudoeste\b|\bsudoeste\b|\bsul\b|\bsul\b", str(x))))
  df_frame["Relações_pessoais"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacompanhante\b|\badultério\b|\bafastado\b|\bamado\b|\bamante\b|\bamigar-se\b|\bamigo\b|\bamizade\b|\bamoroso\b|\barrumar\b|\bcamarada\b|\bcasado\b|\bcasal\b|\bcasamento\b|\bcaso\b|\bcoabitação\b|\bcoabitar\b|\bcolega\b|\bcompanheirismo\b|\bcompanheiro\b|\bconjugal\b|\bcortejar\b|\bdivorciado\b|\bdivorciado\b|\bdormir\scom\b|\benamorada\b|\bencontrar\b|\benviuvar\b|\besposa\b|\besposo\b|\besposo\b|\bfamília\b|\bfamiliar\b|\bhomoafetivo\b|\bíntimo\b|\bmarido\b|\bnamorado\b|\bnamorado\b|\bnamorador\b|\bnamoro\b|\bnoiva\b|\bnoivado\b|\bnoivo\b|\bnoivo\b|\bpaquera\b|\bparceiro\b|\bparceria\b|\bpegação\b|\bpretendente\b|\brameira\b|\brelação\b|\brelacionamento\b|\bromance\b|\bsolteirão\b|\bsolteiro\b|\bsolteirona\b|\btérmino\b|\btraição\b|\bviúva\b|\bviúvo\b|\bviúvo\b", str(x))))
  df_frame["Remover"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdedetização\b|\bextrair\b|\blavagem\b|\blavar\b|\bpré-lavagem\b|\bremoção\b|\bremover\b|\bretirar\b|\btirar\b", str(x))))
  df_frame["Reparação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcompensar\b", str(x))))
  df_frame["Representação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bpontuar\b|\bselo\b|\bsimbolismo\b|\bsimbolo\b", str(x))))
  df_frame["Representantes"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\brepresentante\b", str(x))))
  df_frame["Request_entity"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bpedido\b|\bpedir\b|\bsolicitação\b|\bsolicitar\b", str(x))))
  df_frame["Resgatar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bresgatar\b|\bsalvar\b", str(x))))
  df_frame["Residência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacampado\b|\bacampamento\b|\bacampar\b|\bcampista\b|\bcolega\sde\squarto\b|\bficar\b|\bhabitado\b|\bhabitante\b|\bhabitar\b|\bhospedar\b|\blocatário\b|\bmorador\b|\bmorar\b|\bocupante\b|\bocupar\b|\bradicar\b|\bresidente\b|\bresidir\b|\bviver\b", str(x))))
  df_frame["Resolver_problema"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconserto\b|\bresolver\b", str(x))))
  df_frame["Respirar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bofegar\b|\brespiração\b|\bsuspirar\b", str(x))))
  df_frame["Responsibility"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bresponsável\b", str(x))))
  df_frame["Resto"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bresto\b", str(x))))
  df_frame["Restringir_movimento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcativar\b|\breclusão\b", str(x))))
  df_frame["Resumir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bresumir\b", str(x))))
  df_frame["Retaining"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bguardar\b|\brealizar\b", str(x))))
  df_frame["Retirar_da_participação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bwithdraw\b", str(x))))
  df_frame["Reunir-se"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconcentrar\b|\benglobar\b|\breencontro\b|\breunir\b", str(x))))
  df_frame["Revelar_secredo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconfessar\b|\bdesvendar\b", str(x))))
  df_frame["Roubo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babstração\b|\babstrair\b|\bapropriação\sindevida\b|\barrastão\b|\bassalto\b|\bbatedor\sde\scarteira\b|\bbater\scarteira\b|\bde\sdedos\sleves\b|\bdesviar\b|\bdesvio\b|\bfurtar\b|\bfurto\b|\bladrão\b|\bpropina\b|\broubado\b|\broubar\b|\broubo\b", str(x))))
  df_frame["Sair_de_um_lugar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babandonar\b|\bdeixar\b|\bdemitir\b|\bdeserção\b|\bdesertar\b|\bdesocupar\b|\bemigração\b|\bemigrante\b|\bemigrar\b|\bexilado\b|\bfugir\b|\bfugitivo\b|\binvestir\b|\bremover\b|\bretirada\b|\bretirar\b|\bseparar\b", str(x))))
  df_frame["Sair_do_emprego"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baposentar\b", str(x))))
  df_frame["Sanções"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badvertência\b|\bcartão\samarelo\b|\bcartão\spreto\b|\bcartão\svermelho\b|\bcartão\b|\bdesclassificação\b|\bdesqualificação\b|\bexclusão\b|\bexpulsão\b|\bimpedimento\b|\binelegibilidade\b|\blance-livre\b|\blateral\b|\bman-up\b|\bpasse\sà\sfrente\b|\bpassividade\b|\bpena\b|\bpenalidade\b|\bpênalti\b|\bsanção\b|\bsuspensão\b|\btiro\slivre\b|\bvantagem\b", str(x))))
  df_frame["Satisfazer"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\batender\b|\bsatisfazer\b", str(x))))
  df_frame["Scheduling"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bagendamento\b|\bagendar\b", str(x))))
  df_frame["Sediar_evento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\borganizar\b|\bpaís\ssede\b|\breceber\b|\bsede\b|\bsediar\b", str(x))))
  df_frame["Semelhança"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomum\b", str(x))))
  df_frame["Sensação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmau-cheiro\b|\bperfume\b|\bsabor\b|\bsensação\b|\bsentir\b|\bvista\b", str(x))))
  df_frame["Sentir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bastral\b|\bauto-estima\b|\bcalma\b|\bconsolo\b|\bemoção\b|\bentusiasmo\b|\bexperienciar\b|\bira\b|\borgulho\b|\bpaz\b|\bprazer\b|\bsensação\b|\bsentimento\b|\bsentir\b|\btranquilizar\b", str(x))))
  df_frame["Sequência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bordem\b|\bseguido\b|\bsequência\b|\bsérie\b|\búltimo\b", str(x))))
  df_frame["Serviço_em_alimentação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacepipe\b|\bacompanhamento\b|\bacompanhar\b|\baperitivo\b|\bcafé\sda\smanhã\b|\bcafé\b|\bcoffee\sbreak\b|\bcoffee-break\b|\bentrada\b|\bpetisco\b|\bpetit-déjeuner\b|\bprato\sprincipal\b|\bserviço\b|\bservir\b|\bsobremesa\b|\btira-gosto\b", str(x))))
  df_frame["Serviço_turístico"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balmoço\b|\bcafé\sda\smanhã\b|\bcity\stour\b|\bdispor\b|\bjantar\b|\blanche\b|\bmeia\spensão\b|\bpacote\sturístico\b|\bpacote\b|\bpensão\scompleta\b|\bpetit-déjeuner\b|\brefeição\b|\bserviço\b|\btraslado\b", str(x))))
  df_frame["Serviço_turístico_comprar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomprar\b|\bcontratar\b", str(x))))
  df_frame["Serviço_turístico_pagar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bpagamento\b|\bpagar\b", str(x))))
  df_frame["Serviço_turístico_receber"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcobrar\b", str(x))))
  df_frame["Serviço_turístico_reservar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\breserva\b|\breservar\b", str(x))))
  df_frame["Serviço_turístico_vender"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bagência\b|\bdisponibilizar\b|\boferecer\b|\boperador\b|\bproporcionar\b|\bter\b|\bvender\b", str(x))))
  df_frame["Ser_afetado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bafetar\b|\bter\b", str(x))))
  df_frame["Ser_apto"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapto\b|\bsuficiente\b", str(x))))
  df_frame["Ser_empregado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\btrabalhar\b", str(x))))
  df_frame["Ser_localizado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bencontrar\b|\bestar\b|\bficar\b|\blocalizado\b|\blocalizar\b|\bparadeiro\b|\bsituado\b|\bsituar\b", str(x))))
  df_frame["Ser_necessário"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bessencial\b|\bexigido\b|\bindispensável\b|\bnecessário\b|\bnecessidade\b|\bnecessitar\b|\brequerido\b|\brequerimento\b", str(x))))
  df_frame["Ser_nomeado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapelido\b|\bchamado\b|\bconhecido\scomo\b|\bconhecido\b", str(x))))
  df_frame["Ser_obrigado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bafazer\b|\bdever\b|\bobrigar\b|\btarefa\b", str(x))))
  df_frame["Ser_obrigatório"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcumprir\b|\bdever\b|\bexigência\b|\bfundamental\b|\bimprescindível\b|\bindispensável\b|\bmandatório\b|\bobrigar\b|\bobrigatoriamente\b|\bobrigatório\b|\brequisito\b|\bvital\b", str(x))))
  df_frame["Ser_operacional"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\badiantar\b|\bfunção\b|\bfuncional\b|\bfuncionar\b|\boperacional\b|\bquebrado\b", str(x))))
  df_frame["Ser_relevante"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\brelevante\b", str(x))))
  df_frame["Sex"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcruzamento\b|\bcruzar\b", str(x))))
  df_frame["Sharing"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcompartilhar\b|\bcompartilhável\b|\bdividido\b|\bdividir\b", str(x))))
  df_frame["Simultaneidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bco-ocorrência\b|\bco-ocorrer\b|\bcoincidir\b|\bconcorrência\b|\bconcorrente\b|\bconjunção\b|\bsimultaneamente\b|\bsimultaneidade\b|\bsimultâneo\b", str(x))))
  df_frame["Sinal"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bindicar\b", str(x))))
  df_frame["Sinceridade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdissimulado\b|\boblíquo\b|\bsincero\b", str(x))))
  df_frame["Sistema"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\besquema\b|\bestrutura\b|\bsistema\b", str(x))))
  df_frame["Sobreviver"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bviver\b", str(x))))
  df_frame["Sofrer_mudança"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balternar-se\b|\bdesabar\b|\bguinar\b|\binexorável\b|\binstável\b|\bir\b|\bmudança\b|\bmudar\b|\boscilar\b|\btransição\b|\btransição\b|\btroca\b|\btrocar\b|\bvirar\b|\bvoltar\b", str(x))))
  df_frame["Sofrer_transformação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconversão\b|\bconverter\b|\bdeixar\b|\btornar\b|\btransformar\b|\btransição\b|\btransmutação\b|\btransmutar\b|\btransubstanciação\b|\btransubstanciar\b", str(x))))
  df_frame["Sons"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacústica\b|\bbarulhento\b|\bestalo\b|\bsom\b|\bvoz\b", str(x))))
  df_frame["Spatial_contact"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bao\slado\b|\bcontato\b|\bcontra\b|\bem\scima\b|\bem\b|\bfazer\scontato\b|\bíngreme\b|\bno\stopo\b|\bsobre\b|\btangente\b|\btocar\b", str(x))))
  df_frame["Status_de_sigilo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bsegredo\b", str(x))))
  df_frame["Sub-região_temporal"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcomeço\b|\bfim\b|\bfinal\b|\binício\b|\binício\b|\bintermediário\b|\bmarço\b|\bmeio\b|\bposterior\b|\bprévio\b|\bprincípio\b|\btardio\b|\bvirada\b", str(x))))
  df_frame["Subordinados_e_superiores"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bhierarquia\b", str(x))))
  df_frame["Subpartes_de_artefato"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcabo\b|\bHD\b|\btela\b", str(x))))
  df_frame["Subpartes_de_instalações_esportivas"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balto-falante\b|\balvo\b|\barco\sde\strês\spontos\b|\bárea\sde\saterrissagem\b|\bárea\sde\slançamento\b|\bárea\sde\slance\slivre\b|\bárea\sde\squeda\b|\bárea\sde\ssaque\b|\bárea\sinterna\sdo\sgol\b|\bárea\srestritiva\b|\bárea\stécnica\b|\bárea\b|\baro\b|\barquibancada\b|\bassento\b|\bbaliza\b|\bbanco\sde\sreservas\b|\bbanco\b|\bbandeira\sde\sescanteio\b|\bbandeira\b|\bbanheiro\b|\bbarra\b|\bbarreira\b|\bbase\sdo\srebatedor\b|\bbilheteria\b|\bbloco\sde\spartida\b|\bbloco\sinicial\b|\bcabine\sde\stransmissão\b|\bcaixa\sde\sareia\b|\bcaixa\sde\saterrissagem\b|\bcaixa\sdo\stécnico\b|\bcamarote\b|\bcesta\b|\bcírculo\scentral\b|\bcírculo\sde\sdisparo\b|\bcírculo\sde\slançamento\b|\bcolchão\b|\bencaixe\b|\bescanteio\b|\bfaixa\b|\bfosso\scom\ságua\b|\bfosso\sde\ságua\b|\bgaiola\b|\bgarrafão\b|\bgol\b|\bgramado\b|\bgrande\sárea\b|\bgrande-área\b|\blateral\b|\blimite\sde\scampo\sexterno\b|\blimite\sde\scampo\sinterno\b|\blinha\scentral\b|\blinha\sda\sgrande\sárea\b|\blinha\sda\spequena\sárea\b|\blinha\sde\sarremesso\slateral\b|\blinha\sde\sarremesso\slivre\b|\blinha\sde\sataque\b|\blinha\sde\sdez\smetros\b|\blinha\sde\sfalta\b|\blinha\sde\sfundo\b|\blinha\sde\sgol\b|\blinha\sde\slance\slivre\b|\blinha\sde\smeio-campo\b|\blinha\sde\srestrição\sdo\sgoleiro\b|\blinha\sde\ssaque\b|\blinha\sde\sseis\smetros\b|\blinha\sde\ssete\smetros\b|\blinha\sde\stiro\slivre\b|\blinha\sde\strês\spontos\b|\blinha\sde\svinte\se\sdois\smetros\b|\blinha\sde\svinte\se\strês\smetros\b|\blinha\sde\szona\smorta\b|\blinha\slateral\b|\bmarca\scentral\b|\bmarca\sde\spênalti\b|\bmastro\sde\sfalta\b|\bmeia-lua\b|\bmeio\sde\scampo\b|\bmeio-campo\b|\bmesa\b|\bmonte\sdo\slançador\b|\bobstáculo\b|\bpequena\sárea\b|\bpiscina\b|\bpista\sde\salerta\b|\bpista\b|\bplacar\seletrônico\b|\bplacar\b|\bplataforma\b|\bposte\b|\bprimeira\sbase\b|\bquarta\sbase\b|\braia\b|\brampa\b|\brede\b|\bringue\b|\bsarrafo\b|\bsegunda\sbase\b|\bsetor\b|\bstriking\scircle\b|\btabela\b|\btablado\b|\btábua\sde\simpulsão\b|\btábua\sde\ssalto\b|\btapete\b|\btatame\b|\btelão\b|\bterceira\sbase\b|\btoalete\b|\btoilette\b|\btrave\b|\btravessão\b|\btry\sline\b|\bzona\sde\saterrissagem\b|\bzona\sde\sdois\spontos\b|\bzona\sde\slançamento\b|\bzona\sde\spassagem\b|\bzona\sde\sserviço\b|\bzona\sde\strás\b|\bzona\sfrontal\b|\bzona\slivre\b", str(x))))
  df_frame["Subpartes_de_prédios"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacademia\b|\badega\b|\bala\b|\baltar\b|\bandar\b|\bante-sala\b|\bantecâmara\b|\bapartamento\b|\bárea\sde\slazer\b|\bárea\sde\sserviço\b|\bárea\b|\batelier\b|\bbanheiro\sprivativo\b|\bbanheiro\b|\bbar\b|\bberçário\b|\bbrinquedoteca\b|\bcâmara\b|\bcampanário\b|\bcantina\b|\bcapela\b|\bcarrinho\b|\bcatacumba\b|\bcela\b|\bcerca\b|\bchancelaria\b|\bchão\b|\bcloset\b|\bcômodo\b|\bcopa\b|\bcorredor\b|\bcozinha\b|\bdepósito\sde\sbagagem\b|\bdepósito\b|\bdespensa\b|\belevador\spanorâmico\b|\belevador\b|\bescada\b|\bescritório\b|\bestúdio\b|\blavabo\b|\blavanderia\b|\blavatório\b|\bludoteca\b|\boficina\b|\bpiscina\b|\bporão\b|\bpresbitério\b|\bquadra\sde\stênis\b|\bquadra\b|\bquarto\sde\shóspedes\b|\bquarto\sprincipal\b|\bquarto\b|\bquitinete\b|\brefeitório\b|\brefúgio\b|\brestaurante\b|\bsacada\b|\bsacristia\b|\bsaguão\b|\bsala\sde\sestar\b|\bsala\sde\sestudos\b|\bsala\sde\sjantar\b|\bsala\sde\sTV\b|\bsala\b|\bsalão\b|\bsauna\b|\bsolário\b|\bsótão\b|\bspa\b|\bsubsolo\b|\bterraço\b|\btérreo\b|\bteto\b|\btoalete\b|\btoilette\b|\btorre\b|\bvaranda\b|\bvestiário\b|\bvestíbulo\b", str(x))))
  df_frame["Subpartes_de_veículos"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bmotor\b|\bvolante\b", str(x))))
  df_frame["Substâncias"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bágua\b|\bamaciante\b|\bar\b|\bareia\b|\bátomo\b|\bborracha\b|\bbronze\b|\bcascalho\b|\bdetergente\b|\bdiamante\b|\belétron\b|\bferro\b|\bincenso\b|\blágrima\b|\blátex\b|\bmadeira\b|\bmassinha\b|\bmatéria\b|\bmaterial\b|\bmetal\b|\bmineral\b|\bminério\b|\bmirra\b|\bmolécula\b|\bmonazite\b|\borgânico\b|\bouro\b|\bpapel\b|\bpedra\b|\bpirita\b|\bplástico\b|\bpoeira\b|\bpoluição\b|\bsangue\b|\bsubstância\b|\bterra\b", str(x))))
  df_frame["Substância_por_fase"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\blíquido\b|\bsólido\b|\bviscoso\b", str(x))))
  df_frame["Sucesso_ou_falha"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbem\ssucedido\b|\bconseguir\b|\bfracassar\b|\bperder\sgol\b|\bperder\b|\brodar\b", str(x))))
  df_frame["Suficiência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babundante\b|\badequação\b|\badequadamente\b|\badequado\b|\bamplo\b|\bbastante\b|\bbastar\b|\bdemais\b|\bfartura\b|\binadequação\b|\binadequadamente\b|\binadequado\b|\binsuficiência\b|\binsuficiente\b|\binsuficientemente\b|\bsem\b|\bser\ssuficiente\b|\bservir\b|\bsuficiente\b|\bsuficientemente\b|\btanto\b", str(x))))
  df_frame["Superar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bpassar\b|\bultrapassar\b", str(x))))
  df_frame["Tamanho"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balto\b|\bamplo\b|\bcolossal\b|\bdiminuto\b|\benorme\b|\bespaçoso\b|\bestrondoso\b|\bgigante\b|\bgigantesco\b|\bgrande\b|\bimenso\b|\bimensurável\b|\bínfimo\b|\binfinitesimal\b|\bjumbo\b|\bligeiro\b|\bliliputiano\b|\bmaior\b|\bmassivo\b|\bmediano\b|\bmédio\b|\bmeio-metro\b|\bmenor\b|\bmini\b|\bminiatura\b|\bminúsculo\b|\bpequeno\b|\bsubstancial\b|\bvolumoso\b", str(x))))
  df_frame["Temer"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bamedrontado\b|\bapreensão\b|\bassustado\b|\baterrorizado\b|\blevar\ssusto\b|\bmedo\b|\bnervoso\b|\bpavor\b|\bsurtado\b|\bterror\b|\bviver\scom\smedo\b", str(x))))
  df_frame["Temeridade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bpaciente\b", str(x))))
  df_frame["Temperatura"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcongelante\b|\bescaldante\b|\bfresco\b|\bfrio\b|\bgelado\b|\bmorno\b|\bquente\b|\btemperatura\b|\btépido\b", str(x))))
  df_frame["Temperatura_ambiente"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\babafado\b|\bcongelante\b|\bfresco\b|\bfrio\b|\bfrio\b|\bmorno\b|\bquente\b|\btemperatura\b", str(x))))
  df_frame["Tempo_período_de_ação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdemorado\b|\bdemorar\b|\bdia\sa\sdia\b|\bdia\sa\sdia\b", str(x))))
  df_frame["Tempo_relativo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\banterior\b|\bantigamente\b|\bantiguidade\b|\batrasado\b|\batualidade\b|\bcedo\b|\bconsecutivo\b|\bdepois\b|\benquanto\b|\bpassado\b|\bpróximo\b|\brecente\b|\bseguido\b|\btarde\b|\búltimo\b", str(x))))
  df_frame["Tentar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdedicação\b|\bentregar\b|\besforçar\b|\btentar\b|\btentativa\b", str(x))))
  df_frame["Tentar_persuadir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baconselhar\b|\bconselho\b|\bpor\scontra\sa\sparede\b|\bpressionar\b|\brecomendação\b|\brecomendado\b|\brecomendar\b", str(x))))
  df_frame["Terminar_competição"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bperdedor\b|\bvencedor\b|\bvitória\b", str(x))))
  df_frame["Ter_associado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcom\b", str(x))))
  df_frame["Ter_ou_carecer_de_acesso"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacesso\b", str(x))))
  df_frame["Ter_visita"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconvidar\b", str(x))))
  df_frame["Teste_de_operação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\btestar\b", str(x))))
  df_frame["Texto"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bapresentação\b|\bartigo\b|\bcardápio\b|\bcartão\b|\bcartaz\b|\bcatálogo\b|\bcriação\splástica\b|\bdesenho\b|\bebook\b|\bfrase\b|\bguia\b|\bhistória\b|\binstrução\b|\bjornal\b|\blenda\b|\blinguagem\b|\blista\b|\bliteratura\b|\blivro\b|\bmapa\b|\bmenu\b|\bnarrativa\b|\bobra\b|\bpoema\b|\bpost\b|\bpostal\b|\bprosa\b|\bprovérbio\b|\bquadrinho\b|\brascunho\b|\breportagem\b|\bsentença\b|\bteatro\b|\btexto\b", str(x))))
  df_frame["Texto_criação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bautobiografia\b|\bbiografia\b|\bcriação\stextual\b|\bcrônica\b|\bescrever\b|\blegendar\b|\bpoesia\b|\breportagem\b|\btexto\b", str(x))))
  df_frame["Tipicalidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcurioso\b|\bespecífico\b|\bestranho\b|\bparticular\b|\bprecioso\b|\btipicamente\b|\btípico\b", str(x))))
  df_frame["Tipo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bde\b|\bespécie\b|\bmodo\b|\btipo\b", str(x))))
  df_frame["Tomar_forma"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcurvar\b|\bdobrar\b|\benrolar\b|\btorcer\b", str(x))))
  df_frame["Tomar_partido"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\ba\sfavor\b|\bcontra\b|\bcontra\b|\bluta\b", str(x))))
  df_frame["Tópico"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\ba\srespeito\sde\b|\babordar\b|\bassunto\b|\bponto\b|\bsobre\b|\btema\b|\btópico\b", str(x))))
  df_frame["Torcida"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bespectador\b|\bfã\b|\bplateia\b|\btelespectador\b|\btorcedor\b|\btorcida\b", str(x))))
  df_frame["Tornar-se"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bficar\b", str(x))))
  df_frame["Tornar-se_consciente"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bachar\b|\bciente\b|\bdescoberta\b|\bdescoberto\b|\bdescobrimento\b|\bdescobrir\b|\bdesmascarar\b|\bdetectar\b|\bdiscernir\b|\bdizer\b|\bencontrar\b|\bespionar\b|\bnotar\b|\bobservar\b|\bolhar\b|\bperceber\b|\breconhecer\b|\breconhecimento\b|\bregistrar\b", str(x))))
  df_frame["Tornar-se_membro"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bingresso\b", str(x))))
  df_frame["Tornar-se_não-operacional"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bfurar\b|\bquebrar\b|\bqueimar\b|\brasgar\b|\btrincar\b", str(x))))
  df_frame["Tornar-se_separado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcompor\b|\bdividido\b|\bdividir\b|\bespalhar\b|\bseparar\b", str(x))))
  df_frame["Tornar-se_solto"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bdescolar\b", str(x))))
  df_frame["Tornar-se_visível"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baparição\b|\bdespontar\b", str(x))))
  df_frame["Torneio_de_eliminação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcabeça\sde\schave\b|\bchave\b|\bconquistar\svaga\b|\bdisputa\sdo\sterceiro\slugar\b|\bdisputar\b|\beliminação\b|\beliminar\b|\beliminatórias\b|\bfase\b|\bfinal\b|\bgrupo\b|\bmata-mata\b|\boitavas\sde\sfinal\b|\boitavas\b|\bpassar\b|\bquartas\sde\sfinal\b|\bquartas\b|\brepescagem\b|\bseguir\b|\bsemi\b|\bsemifinais\b|\bsistema\seliminatório\b|\btirar\b", str(x))))
  df_frame["Totalizar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcompletar\b|\bno\stotal\b|\btotalizar\b", str(x))))
  df_frame["Trabalhar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcarreira\b|\bdar\sduro\b|\bemprego\b|\btrabalhar\b|\btrabalho\b", str(x))))
  df_frame["Traços_de_personalidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcachorro\b|\bcompetitividade\b|\bcoragem\b|\bcurioso\b|\bdescompromisso\b|\bforte\b|\bganancioso\b|\bhipócrita\b|\bmodesto\b|\bpersonalidade\b|\bpretensioso\b|\bresponsável\b|\bsensibilidade\b|\bteimoso\b|\btímido\b|\bvaidade\b|\bvalente\b", str(x))))
  df_frame["Traduzir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\btraduzido\b", str(x))))
  df_frame["Trajar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcom\b|\broupa\b|\busar\b", str(x))))
  df_frame["Transferir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\brepassar\b|\btransferir\b", str(x))))
  df_frame["Transição_para_uma_qualidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bficar\b", str(x))))
  df_frame["Transição_para_uma_situação"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bficar\b|\bvir\b", str(x))))
  df_frame["Transição_para_um_estado"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bcrescer\b|\bficar\b|\bvir\b", str(x))))
  df_frame["Transportar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\barrastar\b|\bbuscar\b|\bcarregar\b|\bconduzir\b|\blevar\b|\bmóvel\b|\bpassageiro\b|\bpegar\b|\bportátil\b|\btaxímetro\b|\btransportar\b|\btransporte\b|\btrazer\b", str(x))))
  df_frame["Transporte"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baéreo\b|\baeroporto\sregional\b|\baeroporto\b|\bagência\sde\saluguel\sde\scarros\b|\bagência\sde\sviagens\sde\shelicóptero\b|\bbicicletaria\b|\bcadeira\sde\srodas\b|\bestação\sde\smetrô\b|\bestação\b|\bestacionamento\b|\bitinerário\b|\blinha\b|\blocadora\sde\sveículos\b|\bmarina\b|\bparada\b|\bpassagem\b|\bponto\sde\sônibus\b|\bponto\sde\stáxi\b|\bponto\b|\bporto\b|\brodoviária\b|\brodoviário\b|\brota\b|\bserviço\sde\stransporte\b|\btrânsito\b|\btransporte\spúblico\b|\btransporte\b|\bvoo\b", str(x))))
  df_frame["Tratar_e_maltratar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\btratar\b", str(x))))
  df_frame["Trocar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bescambo\b", str(x))))
  df_frame["Turismo_de_atração"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bagroturismo\b|\batração\sturística\b|\batração\b|\batrativo\b|\becoturismo\b|\bexibição\b|\bingresso\b|\bmeia-entrada\b", str(x))))
  df_frame["Turismo_de_evento"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacontecimento\b|\bevento\b|\bingresso\b|\bmeia-entrada\b", str(x))))
  df_frame["Unidade_calêndrica"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bà\snoite\b|\babril\b|\bagosto\b|\bano\b|\bdécada\b|\bdezembro\b|\bdia\b|\bépoca\b|\bferiado\b|\bfim\sde\ssemana\b|\bfim\sde\starde\b|\bfinal\sdo\sdia\b|\bhoje\b|\bhoje\b|\bjaneiro\b|\bjunho\b|\bmadrugada\b|\bmaio\b|\bmanhã\b|\bnoite\b|\bnoturno\b|\bnovembro\b|\bontem\b|\boutono\b|\boutubro\b|\bperíodo\b|\bpernoite\b|\bpôr-do-sol\b|\bquinta-feira\b|\bsábado\b|\bséculo\b|\bsegunda-feira\b|\bsemana\b|\bsexta-feira\b|\btarde\b|\btemporada\b|\bterça-feira\b|\bverão\b", str(x))))
  df_frame["Usar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baplicar\b|\baproveitar\b|\bempregar\b|\bexploração\b|\breutilizar\b|\busado\b|\busar\b|\buso\b|\butilizado\b|\butilizar\b", str(x))))
  df_frame["Usar_recurso"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bgastar\b|\busar\b", str(x))))
  df_frame["Utensílios"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbandeja\b|\bcolher\b|\bespátula\b|\bpanela\b|\bporcelana\b|\btigela\b|\butensílio\b", str(x))))
  df_frame["Utilidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbom\b|\befetivo\b|\bespetacular\b|\besplêndido\b|\bexcelente\b|\bfantástico\b|\bideal\b|\binefetivo\b|\bmaravilhoso\b|\bótimo\b|\bperfeito\b|\bpreciso\b|\bprestativo\b|\brecurso\b|\bservir\b|\bsoberbo\b|\bútil\b|\butilidade\b|\bvaler\b|\bvalioso\b|\bvalor\b", str(x))))
  df_frame["Valor_extremo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\binsignificante\b|\bmínimo\b", str(x))))
  df_frame["Veículo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baeronave\b|\bambulância\b|\bautomóvel\b|\bavião\b|\bbalsa\b|\bbarco\b|\bbicicleta\b|\bbonde\b|\bbuggy\b|\bcaiaque\b|\bcaminhão\spipa\b|\bcaminhão\b|\bcanoa\b|\bcaravela\b|\bcarro\b|\bcarroça\b|\bcarruagem\b|\bcomboio\b|\bconversível\b|\bcruzeiro\b|\bescuna\b|\bhelicóptero\b|\biate\b|\blimusine\b|\bminivan\b|\bmoto\b|\bnau\b|\bnavio\b|\bônibus\b|\bpatinete\b|\bpedalinho\b|\bpicape\b|\bquadricicleta\b|\bquadriciclo\b|\bscooter\b|\bsedan\b|\bsubmarino\b|\btanque\b|\btáxi\b|\btobogã\b|\btrem\b|\btricíclo\b|\bvalsa\b|\bvan\b|\bveículo\b", str(x))))
  df_frame["Veículo_aterrissagem"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baterrissar\b|\bpousar\b", str(x))))
  df_frame["Vencer_o_oponente"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bperder\b", str(x))))
  df_frame["Veredito"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bconvicção\b", str(x))))
  df_frame["Verificação Verification"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bidentificar\b", str(x))))
  df_frame["Versão_sequência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\báspero\b|\bfinal\b|\bfuncional\b|\bgrosseiro\b|\binicial\b|\boriginal\b|\bpreliminar\b|\brascunho\b", str(x))))
  df_frame["Vestuário"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbermuda\b|\bbermudas\b|\bblusa\b|\bbraçadeira\b|\bcalça\b|\bcalçado\b|\bcalção\b|\bcamisa\b|\bcamiseta\b|\bcasaco\b|\bchapéu\b|\bchinelo\b|\bchuteira\b|\bcolete\b|\bfaixa\b|\bjaqueta\b|\bluva\b|\bmaiô\b|\bmalha\b|\bmeia\b|\bmeião\b|\bmoletom\b|\bnudismo\b|\bpaletó\b|\bquimono\b|\broupa\b|\bsaia\b|\bsamba-canção\b|\bsapatilha\b|\bsapato\b|\bseda\b|\bshort\b|\bsunga\b|\btecido\b|\btênis\b|\btoalha\b|\btouca\b|\buniforme\b|\buwagi\b|\bzubon\b", str(x))))
  df_frame["Vetor_tempo"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\ba\spartir\sde\b|\ba\spropósito\b|\bainda\b|\banteriormente\b|\bantes\b|\bapós\b|\bassim\spor\sdiante\b|\baté\b|\batrás\b|\bdepois\b|\bdesde\b|\bem\sseguida\b|\benfim\b|\beventualmente\b|\bfinalmente\b|\bjá\b|\blogo\b|\bna\shora\b|\bpor\súltimo\b", str(x))))
  df_frame["Viagem"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bexcursão\b|\bexpedição\b|\bfazer\sum\stour\b|\bfuga\b|\bitinerante\b|\bjornada\b|\bodisseia\b|\bperegrinação\b|\bsafari\b|\btour\b|\bviagem\b|\bviajante\b|\bviajar\b", str(x))))
  df_frame["Vias"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\balameda\b|\bartéria\b|\bauto-estrada\b|\bavenida\b|\bbeco\ssem\ssaída\b|\bbulevar\b|\bcalçada\b|\bcalçadão\b|\bcaminho\sde\sacesso\b|\bcaminho\b|\bcurso\b|\besquina\b|\bestrada\b|\bfaixa\b|\bferrovia\b|\bfila\b|\bgaleria\b|\blinha\b|\bpassagem\ssubterrânea\b|\bpercurso\b|\bpista\b|\bponte\b|\bramal\b|\brodovia\b|\brota\b|\brua\b|\btrajeto\b|\btrilha\b|\btrilho\b|\btúnel\b|\bvereda\b|\bvia\sexpressa\b|\bviaduto\b", str(x))))
  df_frame["Vício"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bviciado\b|\bviciado\b", str(x))))
  df_frame["Violência"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bbrutalidade\b|\bselvageria\b|\bviolência\b", str(x))))
  df_frame["Vir_a_existir"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\baparecer\b|\bdesenvolver\b|\bemergir\b|\bfeito\b|\bflorescer\b|\bmaterializar\b|\bnascer\b|\brealizar\b|\breaparecer\b", str(x))))
  df_frame["Visitar"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\brevisitar\b|\bvisitação\b|\bvisitante\b|\bvisitar\b", str(x))))
  df_frame["Volubilidade"] =  df_frame["lema"].apply(lambda x: len(re.findall(r"\bacomodado\somisso\ssilencioso\b", str(x))))
  df_frame.drop('Cenário_do_turismo_estada', axis = 1, inplace=True)
  df_frame['frame_pred_sum']= df_frame.loc[:, "Abundância_distribuída": "Volubilidade"].sum(axis= 1 )
  df_frame= df_frame.query('frame_pred_sum > 0')
  df_frame['frame_pred'] = df_frame.loc[:, 'Abundância_distribuída':  'Volubilidade'].idxmax(axis =1)
  
  return df_frame

coral_frames = coral_framenet()

coral_frames_f = pd.DataFrame(coral_frames.groupby(['tonal_units'])['frame_pred'].value_counts())


coral_frames_f.columns = ['Frequência']

coral_frames_f.reset_index(inplace=True)
coral_frames_f = coral_frames_f.query('frame_pred != "Cenário_do_turismo_estada"')

fig_final = px.sunburst(coral_frames_f.query('Frequência > 10'), path=['frame_pred'],   color = 'tonal_units', values = 'Frequência',
                  color_continuous_scale='BuPu')

fig_final.update_layout(width=700, height=700, margin = dict(t=130, l=50, r=10, b=10), title_text= f'Principais cenas associadas ao léxico do C-ORAL-ESQ', 
                        title_x=0.5, title_y = 0.899, title_font_size= 20)
                        #uniformtext=dict(minsize=13, mode='hide')) 

fig_final.add_trace(go.Sunburst(
    
    insidetextorientation='tangential'
))

fig_final.show()